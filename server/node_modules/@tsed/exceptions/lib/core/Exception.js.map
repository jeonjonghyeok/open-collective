{"version":3,"file":"Exception.js","sourceRoot":"","sources":["../../src/core/Exception.ts"],"names":[],"mappings":";;;AAAA,yCAA+C;AAE/C,MAAa,SAAU,SAAQ,KAAK;IAmClC,YAAY,SAAiB,GAAG,EAAE,UAAkB,EAAE,EAAE,MAA6B;QACnF,KAAK,CAAC,OAAO,CAAC,CAAC;QAnCjB;;;WAGG;QACI,SAAI,GAAW,gBAAgB,CAAC;QAKvC;;;WAGG;QACI,SAAI,GAAW,gBAAgB,CAAC;QAcvC;;WAEG;QACI,YAAO,GAAyB,EAAE,CAAC;QAOxC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,0BAAiB,CAAC,MAAM,CAAC,CAAC;QAEtC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC;IAED,UAAU,CAAC,OAA6B;QACtC,IAAI,CAAC,OAAO,GAAG;YACb,GAAG,IAAI,CAAC,OAAO;YACf,GAAG,OAAO;SACX,CAAC;QAEF,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS,CAAC,GAAW,EAAE,KAAU;QAC/B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QAE1B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS,CAAC,MAA4B;QACpC,IAAI,MAAM,EAAE;YACV,IAAI,MAAM,YAAY,KAAK,EAAE;gBAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACrB,IAAI,CAAC,OAAO,GAAG,GAAG,IAAI,CAAC,OAAO,qBAAqB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC;aACjF;iBAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;gBACrC,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;gBAChC,IAAI,CAAC,OAAO,GAAG,GAAG,IAAI,CAAC,OAAO,qBAAqB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC;aACjF;iBAAM;gBACL,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;aACpB;SACF;IACH,CAAC;IAED,QAAQ;QACN,OAAO,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,MAAM,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;IACjE,CAAC;CACF;AA7ED,8BA6EC;AAED,MAAa,aAAc,SAAQ,SAAS;CAAG;AAA/C,sCAA+C","sourcesContent":["import {getStatusConstant} from \"@tsed/schema\";\n\nexport class Exception extends Error {\n  /**\n   * Exception base name\n   * @type {string}\n   */\n  public name: string = \"HTTP_EXCEPTION\";\n  /**\n   * Message of the exception\n   */\n  public message: string;\n  /**\n   * Exception type\n   * @type {string}\n   */\n  public type: string = \"HTTP_EXCEPTION\";\n  /**\n   * Stack calling\n   */\n  public stack: string;\n  public origin: Error & any;\n  /**\n   * HTTP Code Status\n   */\n  public status: number;\n  /**\n   *\n   */\n  public body: any;\n  /**\n   * Headers must be sent to the response\n   */\n  public headers: {[key: string]: any} = {};\n\n  [key: string]: any;\n\n  constructor(status: number = 500, message: string = \"\", origin?: Error | string | any) {\n    super(message);\n\n    this.status = status;\n    this.message = message;\n    this.name = getStatusConstant(status);\n\n    this.setOrigin(origin);\n  }\n\n  setHeaders(headers: {[key: string]: any}) {\n    this.headers = {\n      ...this.headers,\n      ...headers\n    };\n\n    return this;\n  }\n\n  setHeader(key: string, value: any) {\n    this.headers[key] = value;\n\n    return this;\n  }\n\n  setOrigin(origin: Error | string | any) {\n    if (origin) {\n      if (origin instanceof Error) {\n        this.origin = origin;\n        this.message = `${this.message}, innerException: ${this.origin.message}`.trim();\n      } else if (typeof origin === \"string\") {\n        this.origin = new Error(origin);\n        this.message = `${this.message}, innerException: ${this.origin.message}`.trim();\n      } else {\n        this.body = origin;\n      }\n    }\n  }\n\n  toString() {\n    return `${this.name}(${this.status}): ${this.message} `.trim();\n  }\n}\n\nexport class HTTPException extends Exception {}\n"]}