{"version":3,"file":"SetMapper.js","sourceRoot":"","sources":["../../src/components/SetMapper.ts"],"names":[],"mappings":";;;;AAAA,qCAAsC;AACtC,yDAAoD;AAGpD;;;;GAIG;AAEH,IAAa,SAAS,GAAtB,MAAa,SAAS;IACpB,WAAW,CAAI,IAAS,EAAE,GAAkB;QAC1C,MAAM,GAAG,GAAG,IAAI,GAAG,EAAK,CAAC;QAEzB,iBAAU,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAC/B,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC;IACb,CAAC;IAED,SAAS,CAAI,IAAY,EAAE,GAAkB;QAC3C,MAAM,KAAK,GAAU,EAAE,CAAC;QAExB,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAErD,OAAO,KAAK,CAAC;IACf,CAAC;CACF,CAAA;AAlBY,SAAS;IADrB,uBAAU,CAAC,GAAG,CAAC;GACH,SAAS,CAkBrB;AAlBY,8BAAS","sourcesContent":["import {objectKeys} from \"@tsed/core\";\nimport {JsonMapper} from \"../decorators/jsonMapper\";\nimport {JsonMapperCtx, JsonMapperMethods} from \"../interfaces/JsonMapperMethods\";\n\n/**\n * Mapper for the `Set` Type.\n * @jsonmapper\n * @component\n */\n@JsonMapper(Set)\nexport class SetMapper implements JsonMapperMethods {\n  deserialize<T>(data: any, ctx: JsonMapperCtx): Set<T> {\n    const obj = new Set<T>();\n\n    objectKeys(data).forEach((key) => {\n      obj.add(ctx.next(data[key]));\n    });\n\n    return obj;\n  }\n\n  serialize<T>(data: Set<T>, ctx: JsonMapperCtx): any[] {\n    const array: any[] = [];\n\n    data.forEach((value) => array.push(ctx.next(value)));\n\n    return array;\n  }\n}\n"]}