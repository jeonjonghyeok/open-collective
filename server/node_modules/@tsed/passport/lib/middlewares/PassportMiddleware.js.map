{"version":3,"file":"PassportMiddleware.js","sourceRoot":"","sources":["../../src/middlewares/PassportMiddleware.ts"],"names":[],"mappings":";;;;;AAAA,yCAAmE;AACnE,iDAA8C;AAC9C,qCAAqC;AACrC,mEAA8D;AAC9D,8EAAyE;AAGzE,IAAa,kBAAkB,0BAA/B,MAAa,kBAAkB;IAI7B,GAAG,CAAQ,OAAY,EAAkB,QAAsB;QAC7D,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,eAAe,EAAE,EAAE;YAC7C,OAAO;SACR;QAED,MAAM,EAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,GAAG,IAAI,EAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,oBAAkB,CAAC,CAAC;QAC/F,MAAM,SAAS,GAAG,iDAAuB,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC,CAAC;QAExG,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YAC1B,MAAM,IAAI,yBAAY,CAAC,gBAAgB,CAAC,CAAC;SAC1C;QAED,IAAI,WAAW,EAAE;YACf,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC;SACnC;QAED,aAAa;QACb,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IACtF,CAAC;CACF,CAAA;AArBC;IADC,eAAM,CAAC,mCAAgB,CAAC;sCACP,mCAAgB;4DAAC;AAEnC;IAAK,mBAAA,YAAG,EAAE,CAAA,EAAgB,mBAAA,qBAAY,EAAE,CAAA;;;;6CAkBvC;AAtBU,kBAAkB;IAD9B,mBAAU,EAAE;GACA,kBAAkB,CAuB9B;AAvBY,gDAAkB","sourcesContent":["import {EndpointInfo, Inject, Middleware, Req} from \"@tsed/common\";\nimport {Unauthorized} from \"@tsed/exceptions\";\nimport * as Passport from \"passport\";\nimport {ProtocolsService} from \"../services/ProtocolsService\";\nimport {getProtocolsFromRequest} from \"../utils/getProtocolsFromRequest\";\n\n@Middleware()\nexport class PassportMiddleware {\n  @Inject(ProtocolsService)\n  protocolsService: ProtocolsService;\n\n  use(@Req() request: any, @EndpointInfo() endpoint: EndpointInfo) {\n    if (request.user && request.isAuthenticated()) {\n      return;\n    }\n\n    const {options, protocol, method, originalUrl = true} = endpoint.store.get(PassportMiddleware);\n    const protocols = getProtocolsFromRequest(request, protocol, this.protocolsService.getProtocolsNames());\n\n    if (protocols.length === 0) {\n      throw new Unauthorized(\"Not authorized\");\n    }\n\n    if (originalUrl) {\n      request.url = request.originalUrl;\n    }\n\n    // @ts-ignore\n    return Passport[method](protocols.length === 1 ? protocols[0] : protocols, options);\n  }\n}\n"]}