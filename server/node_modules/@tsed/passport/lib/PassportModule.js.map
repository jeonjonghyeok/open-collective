{"version":3,"file":"PassportModule.js","sourceRoot":"","sources":["../src/PassportModule.ts"],"names":[],"mappings":";;;;AAAA,yCAAsH;AACtH,qCAAqC;AACrC,oFAA+E;AAC/E,kEAA6D;AAE7D;;GAEG;AAIH,IAAa,cAAc,GAA3B,MAAa,cAAc;IAUzB,YACU,GAAwB,EACxB,gBAAkC,EAClC,kBAA6C;QAF7C,QAAG,GAAH,GAAG,CAAqB;QACxB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,uBAAkB,GAAlB,kBAAkB,CAA2B;IACpD,CAAC;IAEJ,OAAO;QACL,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;QACxF,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAE5F,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC,QAAuB,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;QAElH,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,iBAAiB;QACf,MAAM,EAAC,YAAY,EAAE,WAAW,EAAC,GAAG,IAAI,CAAC;QACzC,QAAQ,IAAI,CAAC,YAAY,EAAE;YACzB,KAAK,SAAS;gBACZ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAC,YAAY,EAAC,CAAC,CAAC,CAAC;gBAClD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC,WAAW,EAAC,CAAC,CAAC,CAAC;gBAE9C,OAAO;YAET;gBACE,OAAO,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,YAAY,mCAAmC,CAAC,CAAC;SACnF;IACH,CAAC;CACF,CAAA;AApCC;IADC,iBAAQ,CAAC,uBAAuB,CAAC;;oDACb;AAGrB;IADC,iBAAQ,CAAC,sBAAsB,CAAC;;mDACZ;AAGrB;IADC,iBAAQ,CAAC,eAAe,CAAC;;oDACL;AARV,cAAc;IAH1B,eAAM,CAAC;QACN,KAAK,EAAE,sBAAa,CAAC,SAAS;KAC/B,CAAC;6CAYe,4BAAmB;QACN,mCAAgB;QACd,qDAAyB;GAb5C,cAAc,CAsC1B;AAtCY,wCAAc","sourcesContent":["import {BeforeRoutesInit, Constant, Module, OnInit, PlatformApplication, Provider, ProviderScope} from \"@tsed/common\";\nimport * as Passport from \"passport\";\nimport {PassportSerializerService} from \"./services/PassportSerializerService\";\nimport {ProtocolsService} from \"./services/ProtocolsService\";\n\n/**\n * @ignore\n */\n@Module({\n  scope: ProviderScope.SINGLETON\n})\nexport class PassportModule implements OnInit, BeforeRoutesInit {\n  @Constant(\"passport.userProperty\")\n  userProperty: string;\n\n  @Constant(\"passport.pauseStream\")\n  pauseStream: boolean;\n\n  @Constant(\"PLATFORM_NAME\")\n  platformName: string;\n\n  constructor(\n    private app: PlatformApplication,\n    private protocolsService: ProtocolsService,\n    private passportSerializer: PassportSerializerService\n  ) {}\n\n  $onInit(): Promise<any> | void {\n    Passport.serializeUser(this.passportSerializer.serialize.bind(this.passportSerializer));\n    Passport.deserializeUser(this.passportSerializer.deserialize.bind(this.passportSerializer));\n\n    this.protocolsService.getProtocols().forEach((provider: Provider<any>) => this.protocolsService.invoke(provider));\n\n    return undefined;\n  }\n\n  $beforeRoutesInit(): void | Promise<any> {\n    const {userProperty, pauseStream} = this;\n    switch (this.platformName) {\n      case \"express\":\n        this.app.use(Passport.initialize({userProperty}));\n        this.app.use(Passport.session({pauseStream}));\n\n        return;\n\n      default:\n        console.warn(`Platform \"${this.platformName}\" not supported by @tsed/passport`);\n    }\n  }\n}\n"]}