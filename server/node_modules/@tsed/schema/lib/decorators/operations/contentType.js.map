{"version":3,"file":"contentType.js","sourceRoot":"","sources":["../../../src/decorators/operations/contentType.ts"],"names":[],"mappings":";;;AAAA,uCAAkC;AAElC;;;;;;;;;;;;;;;;;;GAkBG;AACH,SAAgB,WAAW,CAAC,IAAY;IACtC,OAAO,iBAAO,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AACrC,CAAC;AAFD,kCAEC","sourcesContent":["import {Returns} from \"./returns\";\n\n/**\n * Sets the Content-Type HTTP header to the MIME type as determined by mime.lookup() for the specified type.\n * If type contains the “/” character, then it sets the `Content-Type` to type.\n *\n * ```typescript\n *  @ContentType('.html');              // => 'text/html'\n *  @ContentType('html');               // => 'text/html'\n *  @ContentType('json');               // => 'application/json'\n *  @ContentType('application/json');   // => 'application/json'\n *  @ContentType('png');                // => image/png\n *  private myMethod() {}\n * ```\n *\n * @param type\n * @decorator\n * @operation\n * @response\n * @headers\n */\nexport function ContentType(type: string) {\n  return Returns().ContentType(type);\n}\n"]}