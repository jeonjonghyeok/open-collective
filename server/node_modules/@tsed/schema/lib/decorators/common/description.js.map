{"version":3,"file":"description.js","sourceRoot":"","sources":["../../../src/decorators/common/description.ts"],"names":[],"mappings":";;;AAAA,qCAA2G;AAE3G,iDAA4C;AAE5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmDG;AACH,SAAgB,WAAW,CAAC,WAAgB;IAC1C,OAAO,2BAAY,CAAC,CAAC,KAAsB,EAAE,IAAyB,EAAE,EAAE;;QACxE,QAAQ,uBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;YACpC,KAAK,qBAAc,CAAC,IAAI,CAAC;YACzB,KAAK,qBAAc,CAAC,KAAK;gBACvB,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;gBACtC,MAAM;YAER,KAAK,qBAAc,CAAC,KAAK;gBACvB,MAAA,KAAK,CAAC,SAAS,0CAAE,WAAW,CAAC,WAAW,EAAE;gBAC1C,MAAM;YAER,KAAK,qBAAc,CAAC,MAAM;gBACxB,MAAA,KAAK,CAAC,SAAS,0CAAE,WAAW,CAAC,WAAW,EAAE;gBAC1C,MAAM;YAER;gBACE,MAAM,IAAI,+BAAwB,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;SACzD;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AApBD,kCAoBC","sourcesContent":["import {DecoratorParameters, DecoratorTypes, getDecoratorType, UnsupportedDecoratorType} from \"@tsed/core\";\nimport {JsonEntityStore} from \"../../domain/JsonEntityStore\";\nimport {JsonEntityFn} from \"./jsonEntityFn\";\n\n/**\n * Add a description to the class, method or property\n *\n * ## Examples\n * ### On class\n *\n * ```typescript\n * @Description(\"description\")\n * class Model {\n *\n * }\n * ```\n *\n * ### On method\n *\n * ```typescript\n * @Controller(\"/\")\n * class ModelCtrl {\n *    @Description(\"description\")\n *    async method() {}\n * }\n * ```\n *\n * ### On parameter\n *\n * ```typescript\n * @Controller(\"/\")\n * class ModelCtrl {\n *    async method(@Description(\"description\") @PathParam(\"id\") id: string) {}\n * }\n * ```\n *\n * ### On property\n *\n * ```typescript\n * class Model {\n *    @Description(\"description\")\n *    id: string;\n * }\n * ```\n *\n * @param {string} description\n * @decorator\n * @validation\n * @swagger\n * @schema\n * @input\n * @classDecorator\n * @methodDecorator\n * @propertyDecorator\n * @parameterDecorator\n */\nexport function Description(description: any) {\n  return JsonEntityFn((store: JsonEntityStore, args: DecoratorParameters) => {\n    switch (getDecoratorType(args, true)) {\n      case DecoratorTypes.PROP:\n      case DecoratorTypes.CLASS:\n        store.schema.description(description);\n        break;\n\n      case DecoratorTypes.PARAM:\n        store.parameter?.description(description);\n        break;\n\n      case DecoratorTypes.METHOD:\n        store.operation?.description(description);\n        break;\n\n      default:\n        throw new UnsupportedDecoratorType(Description, args);\n    }\n  });\n}\n"]}