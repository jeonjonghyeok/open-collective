"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mergeSpec = exports.tagsReducer = exports.security = exports.parameters = exports.schemesReducer = exports.defaultReducer = void 0;
const core_1 = require("@tsed/core");
/**
 * @ignore
 */
exports.defaultReducer = (collection, value) => {
    if (collection.indexOf(value) === -1) {
        collection.push(value);
    }
    return collection;
};
/**
 * @ignore
 */
exports.schemesReducer = (collection, value) => {
    const current = collection.find((current) => current.type === value.type);
    if (current) {
        core_1.deepExtends(current, value);
    }
    else {
        collection.push(value);
    }
    return collection;
};
/**
 * @ignore
 */
exports.parameters = (collection, value) => {
    const current = collection.find((current) => current.in === value.in && current.name === value.name);
    if (current) {
        core_1.deepExtends(current, value);
    }
    else {
        collection.push(value);
    }
    return collection;
};
/**
 * @ignore
 */
exports.security = (collection, value) => {
    const current = collection.find((current) => {
        return Object.keys(value).find((key) => !!current[key]);
    });
    if (current) {
        core_1.deepExtends(current, value, { default: exports.defaultReducer });
    }
    else {
        collection.push(value);
    }
    return collection;
};
/**
 * @ignore
 */
exports.tagsReducer = (collection, value) => {
    const current = collection.find((current) => current.name === value.name);
    if (current) {
        core_1.deepExtends(current, value);
    }
    else {
        collection.push(value);
    }
    return collection;
};
/**
 * @ignore
 */
const SPEC_REDUCERS = {
    default: exports.defaultReducer,
    security: exports.security,
    parameters: exports.parameters,
    oneOf: exports.schemesReducer,
    anyOf: exports.schemesReducer,
    allOf: exports.schemesReducer,
    tags: exports.tagsReducer
};
/**
 * Merge two spec
 * @param spec
 * @param input
 */
function mergeSpec(spec, input) {
    return core_1.cleanObject(core_1.deepExtends(spec, input, SPEC_REDUCERS));
}
exports.mergeSpec = mergeSpec;
//# sourceMappingURL=mergeSpec.js.map