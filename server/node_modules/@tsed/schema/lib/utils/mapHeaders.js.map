{"version":3,"file":"mapHeaders.js","sourceRoot":"","sources":["../../src/utils/mapHeaders.ts"],"names":[],"mappings":";;;AAEA;;;;GAIG;AACH,SAAgB,UAAU,CAAC,OAAoB;IAC7C,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,UAAuC,EAAE,GAAW,EAAE,EAAE;QAC1F,MAAM,KAAK,GAAQ,OAAO,CAAC,GAAG,CAAC,CAAC;QAEhC,IAAI,IAAI,GAAG,OAAO,KAAK,CAAC;QAExB,IAAI,OAAO,GAAQ;YACjB,OAAO,EAAE,KAAK;SACf,CAAC;QAEF,IAAI,IAAI,KAAK,QAAQ,EAAE;YACrB,OAAO,GAAG,KAAK,CAAC;YAChB,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC;YAChF,OAAO,OAAO,CAAC,KAAK,CAAC;YACrB,IAAI,GAAG,OAAO,OAAO,CAAC,OAAO,CAAC;SAC/B;QAED,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC;QAEpC,UAAU,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;QAE1B,OAAO,UAAU,CAAC;IACpB,CAAC,EAAE,EAAE,CAAC,CAAC;AACT,CAAC;AAvBD,gCAuBC","sourcesContent":["import {JsonHeader, JsonHeaders} from \"../interfaces/JsonOpenSpec\";\n\n/**\n * Map input header to a standard open spec header\n * @param headers\n * @ignore\n */\nexport function mapHeaders(headers: JsonHeaders): {[key: string]: JsonHeader} {\n  return Object.keys(headers).reduce((newHeaders: {[key: string]: JsonHeader}, key: string) => {\n    const value: any = headers[key];\n\n    let type = typeof value;\n\n    let options: any = {\n      example: value\n    };\n\n    if (type === \"object\") {\n      options = value;\n      options.example = options.value === undefined ? options.example : options.value;\n      delete options.value;\n      type = typeof options.example;\n    }\n\n    options.type = options.type || type;\n\n    newHeaders[key] = options;\n\n    return newHeaders;\n  }, {});\n}\n"]}