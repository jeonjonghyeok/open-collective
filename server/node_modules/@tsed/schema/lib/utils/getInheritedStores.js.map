{"version":3,"file":"getInheritedStores.js","sourceRoot":"","sources":["../../src/utils/getInheritedStores.ts"],"names":[],"mappings":";;;AAAA,qCAA6C;AAE7C,6DAAwD;AAExD;;;GAGG;AACH,SAAgB,kBAAkB,CAAC,MAAuB;IACxD,MAAM,KAAK,GAAQ,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,uCAAkB,CAAC,MAAM,CAAC,CAAC;IAExE,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;QACrB,KAAK,CAAC,UAAU,GAAG,kBAAW,CAAC,KAAK,CAAC,MAAM,CAAC;aACzC,OAAO,EAAE;aACT,MAAM,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;YACzB,OAAO,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,uCAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;QACvD,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;KACjB;IAED,OAAO,KAAK,CAAC,UAAU,CAAC;AAC1B,CAAC;AAZD,gDAYC","sourcesContent":["import {ancestorsOf, Type} from \"@tsed/core\";\nimport {JsonEntityStore} from \"../domain/JsonEntityStore\";\nimport {getJsonEntityStore} from \"./getJsonEntityStore\";\n\n/**\n * Return store and his inherited stores\n * @param target\n */\nexport function getInheritedStores(target: Type<any> | any): Map<Type<any>, JsonEntityStore> {\n  const store: any = target.isStore ? target : getJsonEntityStore(target);\n\n  if (!store.$inherited) {\n    store.$inherited = ancestorsOf(store.target)\n      .reverse()\n      .reduce((context, model) => {\n        return context.set(model, getJsonEntityStore(model));\n      }, new Map());\n  }\n\n  return store.$inherited;\n}\n"]}