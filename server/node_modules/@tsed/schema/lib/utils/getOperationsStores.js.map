{"version":3,"file":"getOperationsStores.js","sourceRoot":"","sources":["../../src/utils/getOperationsStores.ts"],"names":[],"mappings":";;;AAEA,6DAAwD;AACxD,6DAAwD;AAExD,SAAgB,mBAAmB,CAAsB,MAAuB;IAC9E,MAAM,KAAK,GAAQ,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,uCAAkB,CAAC,MAAM,CAAC,CAAC;IAExE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;QACtB,MAAM,MAAM,GAAG,uCAAkB,CAAC,KAAK,CAAC,CAAC;QACzC,KAAK,CAAC,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;QAE9B,MAAM,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE;YAC9B,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;gBAC1C,IAAI,SAAS,CAAC,SAAS,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;oBACxE,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;iBACzD;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;KACJ;IAED,OAAO,KAAK,CAAC,WAAW,CAAC;AAC3B,CAAC;AAjBD,kDAiBC","sourcesContent":["import {Type} from \"@tsed/core\";\nimport {JsonEntityStore} from \"../domain/JsonEntityStore\";\nimport {getInheritedStores} from \"./getInheritedStores\";\nimport {getJsonEntityStore} from \"./getJsonEntityStore\";\n\nexport function getOperationsStores<T = JsonEntityStore>(target: Type<any> | any): Map<string, T> {\n  const store: any = target.isStore ? target : getJsonEntityStore(target);\n\n  if (!store.$operations) {\n    const stores = getInheritedStores(store);\n    store.$operations = new Map();\n\n    stores.forEach((currentStore) => {\n      currentStore.children.forEach((propStore) => {\n        if (propStore.operation && !store.$operations.has(propStore.propertyKey)) {\n          store.$operations.set(propStore.propertyKey, propStore);\n        }\n      });\n    });\n  }\n\n  return store.$operations;\n}\n"]}