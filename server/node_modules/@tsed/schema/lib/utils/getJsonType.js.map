{"version":3,"file":"getJsonType.js","sourceRoot":"","sources":["../../src/utils/getJsonType.ts"],"names":[],"mappings":";;;AAAA,qCAAiG;AAEjG;;GAEG;AACU,QAAA,UAAU,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AAEvG,SAAgB,WAAW,CAAC,KAAU;IACpC,IAAI,KAAK,KAAK,IAAI,EAAE;QAClB,OAAO,MAAM,CAAC;KACf;IAED,IAAI,kCAA2B,CAAC,KAAK,CAAC,EAAE;QACtC,IAAI,kBAAU,CAAC,OAAO,CAAC,KAAe,CAAC,GAAG,CAAC,CAAC,EAAE;YAC5C,OAAO,KAAK,CAAC;SACd;QAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,IAAI,KAAK,KAAK,MAAM,EAAE;gBACpB,OAAO,MAAM,CAAC;aACf;YAED,OAAO,SAAS,CAAC;SAClB;QAED,OAAO,kBAAW,CAAC,KAAK,CAAC,CAAC;KAC3B;IAED,IAAI,0BAAmB,CAAC,KAAK,CAAC,EAAE;QAC9B,IAAI,KAAK,KAAK,KAAK,EAAE;YACnB,OAAO,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;SAC/B;QAED,OAAO,OAAO,CAAC;KAChB;IAED,IAAI,KAAK,KAAK,GAAG,EAAE;QACjB,OAAO,OAAO,CAAC;KAChB;IAED,IAAI,aAAM,CAAC,KAAK,CAAC,EAAE;QACjB,OAAO,QAAQ,CAAC;KACjB;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC;AAtCD,kCAsCC","sourcesContent":["import {isArrayOrArrayClass, isDate, isPrimitiveOrPrimitiveClass, primitiveOf} from \"@tsed/core\";\n\n/**\n * @ignore\n */\nexport const JSON_TYPES = [\"string\", \"number\", \"integer\", \"boolean\", \"object\", \"array\", \"null\", \"any\"];\n\nexport function getJsonType(value: any): string {\n  if (value === null) {\n    return \"null\";\n  }\n\n  if (isPrimitiveOrPrimitiveClass(value)) {\n    if (JSON_TYPES.indexOf(value as string) > -1) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      if (value === \"file\") {\n        return \"file\";\n      }\n\n      return \"generic\";\n    }\n\n    return primitiveOf(value);\n  }\n\n  if (isArrayOrArrayClass(value)) {\n    if (value !== Array) {\n      return value.map(getJsonType);\n    }\n\n    return \"array\";\n  }\n\n  if (value === Set) {\n    return \"array\";\n  }\n\n  if (isDate(value)) {\n    return \"string\";\n  }\n\n  return \"object\";\n}\n"]}