{"version":3,"file":"concatParameters.js","sourceRoot":"","sources":["../../src/utils/concatParameters.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,SAAgB,gBAAgB,CAAC,UAAiB,EAAE,SAAc;IAChE,OAAO,UAAU;SACd,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;QACb,MAAM,CAAC,GAAG,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC;QAE5F,OAAO,CAAC,IAAI,KAAK,CAAC;IACpB,CAAC,CAAC;SACD,MAAM,CAAC,GAAG,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,KAAU,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC,CAAC;AACjF,CAAC;AARD,4CAQC","sourcesContent":["/**\n * @ignore\n */\nexport function concatParameters(parameters: any[], operation: any) {\n  return parameters\n    .map((param) => {\n      const f = operation.parameters.find((p: any) => p.in === param.in && p.name === param.name);\n\n      return f || param;\n    })\n    .concat(...operation.parameters.filter((param: any) => param.in !== \"path\"));\n}\n"]}