{"version":3,"file":"mapAllowedRequiredValues.js","sourceRoot":"","sources":["../../src/utils/mapAllowedRequiredValues.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,SAAgB,wBAAwB,CAAC,IAAuB,EAAE,MAAW;IAC3E,MAAM,qBAAqB,GAAG,EAAE,CAAC;IAEjC,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;QAChD,qBAAqB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAChC;IAED,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,EAAE;QACrG,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAClC;IAED,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,OAAO,KAAK,CAAC,EAAE;QACnD,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KAC/B;IAED,OAAO,qBAAqB,CAAC;AAC/B,CAAC;AAhBD,4DAgBC","sourcesContent":["/**\n * @ignore\n */\nexport function mapAllowedRequiredValues(type: string | string[], schema: any): (string | number | null)[] {\n  const allowedRequiredValues = [];\n\n  if (type.includes(\"string\") && !schema.minLength) {\n    allowedRequiredValues.push(\"\");\n  }\n\n  if (type.includes(\"null\") || (schema.oneOf && schema.oneOf.find((item: any) => item.type === \"null\"))) {\n    allowedRequiredValues.push(null);\n  }\n\n  if (type.includes(\"number\") && schema.minimum === 0) {\n    allowedRequiredValues.push(0);\n  }\n\n  return allowedRequiredValues;\n}\n"]}