{"version":3,"file":"JsonEntityStore.js","sourceRoot":"","sources":["../../src/domain/JsonEntityStore.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  decoratorTypeOf,\n  DecoratorTypes,\n  descriptorOf,\n  Entity,\n  EntityOptions,\n  isClass,\n  isCollection,\n  isPromise,\n  Store,\n  Type\n} from \"@tsed/core\";\nimport {mapAllowedRequiredValues} from \"../utils/mapAllowedRequiredValues\";\nimport {JsonOperation} from \"./JsonOperation\";\nimport {JsonParameter} from \"./JsonParameter\";\nimport {JsonSchema} from \"./JsonSchema\";\n\nexport interface JsonEntityStoreOptions extends EntityOptions {\n  [key: string]: any;\n}\n\nconst getSchema = (type: any) => {\n  if (isCollection(type) || !isClass(type)) {\n    return JsonSchema.from({\n      type\n    });\n  }\n\n  return JsonEntityStore.from(type).schema;\n};\n\nexport class JsonEntityStore extends Entity implements JsonEntityStoreOptions {\n  static entities = new Map<DecoratorTypes, Type<JsonEntityStore>>();\n  readonly store: Store;\n  readonly isStore = true;\n  /**\n   * List of children JsonEntityStore (properties or methods or params)\n   */\n  readonly children: Map<string | number, JsonEntityStore> = new Map();\n  /**\n   * Path used to generate open spec.\n   */\n  public path: string = \"/\";\n  /**\n   * Ref to JsonSchema\n   */\n  protected _schema: JsonSchema;\n  /**\n   * Ref to JsonOperation when the decorated object is a method.\n   */\n  protected _operation: JsonOperation;\n  /**\n   * Ref to JsonParameter when the decorated object is a parameter.\n   */\n  protected _parameter: JsonParameter;\n\n  [key: string]: any;\n\n  constructor(options: JsonEntityStoreOptions) {\n    super(options);\n    this.store = options.store;\n\n    /* istanbul ignore next */\n    if (options.children) {\n      this.children = options.children;\n    }\n\n    this.build();\n  }\n\n  /**\n   * Return the JsonSchema\n   */\n  get schema(): JsonSchema {\n    return this._schema;\n  }\n\n  /**\n   * Return the JsonOperation\n   */\n  get operation(): JsonOperation | undefined {\n    return this._operation;\n  }\n\n  /**\n   * Return the JsonParameter\n   */\n  get parameter(): JsonParameter | undefined {\n    return this._parameter;\n  }\n\n  get nestedGenerics(): Type<any>[][] {\n    switch (this.decoratorType) {\n      case DecoratorTypes.PARAM:\n        return this.parameter!.nestedGenerics;\n      default:\n        return this.schema.nestedGenerics;\n    }\n  }\n\n  set nestedGenerics(nestedGenerics: Type<any>[][]) {\n    switch (this.decoratorType) {\n      case DecoratorTypes.PARAM:\n        this.parameter!.nestedGenerics = nestedGenerics;\n        break;\n      default:\n        this.schema.nestedGenerics = nestedGenerics;\n        break;\n    }\n  }\n\n  /**\n   *\n   * @returns {Type<any>}\n   */\n  get type(): Type<any> | any {\n    return this._type;\n  }\n\n  /**\n   * Get original type without transformation\n   * @param value\n   */\n  set type(value: Type<any> | any) {\n    this._type = value;\n    this.build();\n  }\n\n  get responseType(): undefined | any {\n    const media = this.operation?.getResponseOf(this.statusCode)?.getMedia(\"application/json\");\n\n    if (media && media.has(\"schema\")) {\n      const schema = media.get(\"schema\") as JsonSchema;\n      return schema.getComputedItemType();\n    }\n\n    return this.type;\n  }\n\n  /**\n   * Return the itemSchema computed type. if the type is a function used for recursive model, the function will be called to\n   * get the right type.\n   */\n  get computedType() {\n    return this.itemSchema.getComputedType();\n  }\n\n  get itemSchema(): JsonSchema {\n    return this.isCollection ? this.schema.itemSchema() : this.schema;\n  }\n\n  get parentSchema(): JsonSchema {\n    return this.parent.schema;\n  }\n\n  get parent(): JsonEntityStore {\n    const {target, propertyKey, decoratorType} = this;\n\n    switch (decoratorType) {\n      case DecoratorTypes.PARAM:\n        return JsonEntityStore.fromMethod(target, propertyKey as string);\n      case DecoratorTypes.METHOD:\n      case DecoratorTypes.PROP:\n        return JsonEntityStore.from(target);\n    }\n\n    return this;\n  }\n\n  /**\n   * Return the required state.\n   * @returns {boolean}\n   */\n  get required(): boolean {\n    switch (this.decoratorType) {\n      case DecoratorTypes.PROP:\n        return this.parent.schema.isRequired(this.propertyKey as string);\n      case DecoratorTypes.PARAM:\n        return this.parameter!.get(\"required\");\n    }\n\n    return false;\n  }\n\n  /**\n   * Change the state of the required data.\n   * @param value\n   */\n  set required(value: boolean) {\n    switch (this.decoratorType) {\n      case DecoratorTypes.PROP:\n        if (value) {\n          this.parent.schema.addRequired(this.propertyKey as string);\n        } else {\n          this.parent.schema.removeRequired(this.propertyKey as string);\n        }\n        break;\n      case DecoratorTypes.PARAM:\n        this.parameter!.required(value);\n        break;\n    }\n  }\n\n  get allowedRequiredValues() {\n    if (!this._allowedRequiredValues) {\n      this._allowedRequiredValues = [];\n      if (this.decoratorType === DecoratorTypes.PROP) {\n        const schema = this.parent.schema.toJSON({useAlias: false}).properties[this.propertyName];\n\n        const type: string | string[] = schema.type || \"\";\n\n        this._allowedRequiredValues = mapAllowedRequiredValues(type, schema);\n      }\n\n      if (this.decoratorType === DecoratorTypes.PARAM) {\n        const schema = this.parameter!.$schema;\n        const type: string | string[] = schema.get(\"type\") || \"\";\n\n        this._allowedRequiredValues = mapAllowedRequiredValues(type, schema.toJSON());\n      }\n    }\n\n    return this._allowedRequiredValues;\n  }\n\n  /**\n   *\n   * @param args\n   */\n  static from<T extends JsonEntityStore = JsonEntityStore>(...args: any[]) {\n    const store = Store.from(...args);\n\n    if (!store.has(JsonEntityStore)) {\n      const entityStore = JsonEntityStore.entities.get(decoratorTypeOf(args)) || JsonEntityStore;\n\n      const jsonSchemaStore = new (entityStore as any)({\n        store,\n        target: args[0],\n        propertyKey: args[1],\n        index: typeof args[2] === \"number\" ? args[2] : undefined,\n        descriptor: typeof args[2] === \"object\" ? args[2] : undefined\n      });\n\n      store.set(JsonEntityStore, jsonSchemaStore);\n    }\n\n    return store.get<T>(JsonEntityStore)!;\n  }\n\n  static fromMethod(target: any, propertyKey: string | symbol) {\n    return this.from(target, propertyKey, descriptorOf(target, propertyKey));\n  }\n\n  /**\n   * Check precondition between value, required and allowedRequiredValues to know if the entity is required.\n   * @param value\n   * @returns {boolean}\n   */\n  isRequired(value: any): boolean {\n    return this.required && [undefined, null, \"\"].includes(value) && !this.allowedRequiredValues.includes(value);\n  }\n\n  protected build() {\n    if (!this._type) {\n      let type: any;\n\n      switch (this.decoratorType) {\n        case DecoratorTypes.PARAM:\n          type = Store.getParamTypes(this.target, this.propertyKey)[this.index!];\n          break;\n        case DecoratorTypes.CLASS:\n          type = this.target;\n          break;\n        case DecoratorTypes.PROP:\n          type = Store.getType(this.target, this.propertyKey);\n          break;\n        case DecoratorTypes.METHOD:\n          type = Store.getReturnType(this.target, this.propertyKey);\n          type = isPromise(type) ? undefined : type;\n          break;\n      }\n\n      if (isCollection(type)) {\n        this.collectionType = type;\n      } else {\n        this._type = type;\n      }\n    }\n\n    this._type = this._type || Object;\n\n    switch (this.decoratorType) {\n      default:\n        this._schema = JsonSchema.from();\n        break;\n\n      case DecoratorTypes.CLASS:\n        this._schema = JsonSchema.from({\n          type: this.type\n        });\n        break;\n      case DecoratorTypes.METHOD:\n        this._operation = this.createOperation();\n        break;\n      case DecoratorTypes.PARAM:\n        this._parameter = this.createParameter();\n        break;\n      case DecoratorTypes.PROP:\n        this._schema = this.createProperty();\n        break;\n    }\n  }\n\n  protected createProperty(): any {\n    const parentStore = this.parent;\n\n    const properties = parentStore.schema.get(\"properties\");\n    let schema: JsonSchema = properties[this.propertyName];\n\n    if (!schema) {\n      parentStore.children.set(this.propertyName, this);\n\n      schema = JsonSchema.from({\n        type: this.collectionType || this.type\n      });\n\n      if (this.collectionType) {\n        schema.itemSchema(this.type);\n      }\n    }\n\n    parentStore.schema.addProperty(this.propertyName, schema);\n\n    return schema;\n  }\n\n  protected createOperation(): JsonOperation {\n    const parentStore = this.parent;\n\n    // response schema of the method\n    let operation = this.operation;\n\n    if (!operation) {\n      operation = new JsonOperation();\n      parentStore.children.set(this.propertyName, this);\n    }\n\n    if (isCollection(this._type)) {\n      this.collectionType = this._type;\n      // @ts-ignore\n      delete this._type;\n    }\n\n    this._schema = JsonSchema.from({\n      type: this.collectionType || this.type\n    });\n\n    if (this.collectionType) {\n      this._schema.itemSchema(this.type);\n    }\n\n    parentStore.schema.addProperty(this.propertyName, this.schema);\n\n    return operation;\n  }\n\n  protected createParameter(): JsonParameter {\n    const parentStore = this.parent;\n    let parameter = this.parameter;\n\n    if (!parameter) {\n      parameter = new JsonParameter();\n      parentStore.children.set(this.index!, this);\n\n      this._schema = getSchema(this.collectionType || this.type);\n\n      parameter.schema(this._schema);\n\n      if (this.collectionType) {\n        this._schema.itemSchema(getSchema(this.type));\n      }\n\n      parentStore.operation?.addParameter(this.index as number, parameter);\n    }\n\n    return parameter;\n  }\n}\n"]}