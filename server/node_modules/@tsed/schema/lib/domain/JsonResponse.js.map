{"version":3,"file":"JsonResponse.js","sourceRoot":"","sources":["../../src/domain/JsonResponse.ts"],"names":[],"mappings":";;;AAAA,qCAA+C;AAG/C,oDAA+C;AAC/C,sEAAiE;AACjE,uCAAkC;AAElC,2CAAsC;AAItC,MAAa,SAAU,SAAQ,iBAAiC;IAC9D,MAAM,CAAC,MAAkB;QACvB,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAE3B,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAND,8BAMC;AAED,MAAa,YAAa,SAAQ,iBAA4B;IAC5D,YAAY,MAAoC,EAAE;QAChD,KAAK,CAAC,GAAG,CAAC,CAAC;QAEX,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,IAAK,EAAU,CAAC,CAAC;IAC3C,CAAC;IAED,WAAW,CAAC,WAAmB;QAC7B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QAErC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,CAAC,OAAoC;QAC1C,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,uBAAU,CAAC,OAAO,CAAC,CAAC,CAAC;QAEzC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,CAAC,OAAyC;QAC/C,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,yCAAmB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;QAE7D,OAAO,IAAI,CAAC;IACd,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,GAAG,CAAC,SAAS,CAAE,CAAC;IAC9B,CAAC;IAED,QAAQ,CAAC,SAAiB;QACxB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAEzB,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC,GAAG,CAAC,SAAS,CAAQ,CAAC;IACjD,CAAC;IAED,QAAQ,CAAC,SAAiB;QACxB,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEpC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;YAC3B,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,SAAS,EAAE,CAAC,CAAC;SACzC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,CAAC,UAA6B,EAAE;QACpC,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAEvC,IAAI,OAAO,CAAC,QAAQ,KAAK,qBAAS,CAAC,OAAO,EAAE;YAC1C,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YAE7C,OAAO,kBAAW,CAAC;gBACjB,GAAG,QAAQ;gBACX,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC;gBACxB,OAAO,EAAE,SAAS;aACnB,CAAC,CAAC;SACJ;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF;AA5DD,oCA4DC","sourcesContent":["import {cleanObject, HashOf} from \"@tsed/core\";\nimport {OS3MediaType, OS3Response} from \"@tsed/openspec\";\nimport {JsonHeader, JsonSchemaOptions} from \"../interfaces\";\nimport {mapHeaders} from \"../utils/mapHeaders\";\nimport {toJsonMapCollection} from \"../utils/toJsonMapCollection\";\nimport {JsonMap} from \"./JsonMap\";\nimport {JsonSchema} from \"./JsonSchema\";\nimport {SpecTypes} from \"./SpecTypes\";\n\nexport type JsonResponseOptions = OS3Response<JsonSchema, string | JsonHeader>;\n\nexport class JsonMedia extends JsonMap<OS3MediaType<JsonSchema>> {\n  schema(schema: JsonSchema) {\n    this.set(\"schema\", schema);\n\n    return this;\n  }\n}\n\nexport class JsonResponse extends JsonMap<JsonResponseOptions> {\n  constructor(obj: Partial<JsonResponseOptions> = {}) {\n    super(obj);\n\n    this.content(obj.content || ({} as any));\n  }\n\n  description(description: string): this {\n    this.set(\"description\", description);\n\n    return this;\n  }\n\n  headers(headers: HashOf<string | JsonHeader>): this {\n    this.set(\"headers\", mapHeaders(headers));\n\n    return this;\n  }\n\n  content(content: HashOf<OS3MediaType<JsonSchema>>) {\n    this.set(\"content\", toJsonMapCollection(content, JsonMedia));\n\n    return this;\n  }\n\n  getContent(): JsonMap<JsonMedia> {\n    return this.get(\"content\")!;\n  }\n\n  getMedia(mediaType: string): JsonMedia {\n    this.addMedia(mediaType);\n\n    return this.getContent().get(mediaType) as any;\n  }\n\n  addMedia(mediaType: string) {\n    const content = this.get(\"content\");\n\n    if (!content.has(mediaType)) {\n      content.set(mediaType, new JsonMedia());\n    }\n\n    return this;\n  }\n\n  toJSON(options: JsonSchemaOptions = {}): any {\n    const response = super.toJSON(options);\n\n    if (options.specType !== SpecTypes.OPENAPI) {\n      const key = Object.keys(response.content)[0];\n\n      return cleanObject({\n        ...response,\n        ...response.content[key],\n        content: undefined\n      });\n    }\n\n    return response;\n  }\n}\n"]}