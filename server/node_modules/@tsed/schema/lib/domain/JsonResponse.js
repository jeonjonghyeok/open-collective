"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonResponse = exports.JsonMedia = void 0;
const core_1 = require("@tsed/core");
const mapHeaders_1 = require("../utils/mapHeaders");
const toJsonMapCollection_1 = require("../utils/toJsonMapCollection");
const JsonMap_1 = require("./JsonMap");
const SpecTypes_1 = require("./SpecTypes");
class JsonMedia extends JsonMap_1.JsonMap {
    schema(schema) {
        this.set("schema", schema);
        return this;
    }
}
exports.JsonMedia = JsonMedia;
class JsonResponse extends JsonMap_1.JsonMap {
    constructor(obj = {}) {
        super(obj);
        this.content(obj.content || {});
    }
    description(description) {
        this.set("description", description);
        return this;
    }
    headers(headers) {
        this.set("headers", mapHeaders_1.mapHeaders(headers));
        return this;
    }
    content(content) {
        this.set("content", toJsonMapCollection_1.toJsonMapCollection(content, JsonMedia));
        return this;
    }
    getContent() {
        return this.get("content");
    }
    getMedia(mediaType) {
        this.addMedia(mediaType);
        return this.getContent().get(mediaType);
    }
    addMedia(mediaType) {
        const content = this.get("content");
        if (!content.has(mediaType)) {
            content.set(mediaType, new JsonMedia());
        }
        return this;
    }
    toJSON(options = {}) {
        const response = super.toJSON(options);
        if (options.specType !== SpecTypes_1.SpecTypes.OPENAPI) {
            const key = Object.keys(response.content)[0];
            return core_1.cleanObject({
                ...response,
                ...response.content[key],
                content: undefined
            });
        }
        return response;
    }
}
exports.JsonResponse = JsonResponse;
//# sourceMappingURL=JsonResponse.js.map