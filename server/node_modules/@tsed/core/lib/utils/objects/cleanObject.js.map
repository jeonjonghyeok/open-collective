{"version":3,"file":"cleanObject.js","sourceRoot":"","sources":["../../../src/utils/objects/cleanObject.ts"],"names":[],"mappings":";;;AAAA,qDAAgD;AAChD;;;;GAIG;AACH,SAAgB,WAAW,CAAC,GAAQ,EAAE,SAAmB,EAAE;IACzD,OAAO,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE;QACtD,IAAI,+BAAc,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YAC/C,OAAO,GAAG,CAAC;SACZ;QAED,OAAO,KAAK,KAAK,SAAS;YACxB,CAAC,CAAC,GAAG;YACL,CAAC,CAAC;gBACE,GAAG,GAAG;gBACN,CAAC,GAAG,CAAC,EAAE,KAAK;aACb,CAAC;IACR,CAAC,EAAE,EAAE,CAAC,CAAC;AACT,CAAC;AAbD,kCAaC","sourcesContent":["import {isProtectedKey} from \"./isProtectedKey\";\n/**\n * Remove undefined value\n * @param obj\n * @param ignore\n */\nexport function cleanObject(obj: any, ignore: string[] = []): any {\n  return Object.entries(obj).reduce((obj, [key, value]) => {\n    if (isProtectedKey(key) || ignore.includes(key)) {\n      return obj;\n    }\n\n    return value === undefined\n      ? obj\n      : {\n          ...obj,\n          [key]: value\n        };\n  }, {});\n}\n"]}