{"version":3,"file":"toStringConstructor.js","sourceRoot":"","sources":["../../../src/utils/objects/toStringConstructor.ts"],"names":[],"mappings":";;;AAAA,mDAA8C;AAE9C,SAAgB,mBAAmB,CAAC,MAAW;IAC7C,MAAM,GAAG,GAAG,6BAAa,CAAC,MAAM,CAAC,CAAC;IAClC,MAAM,OAAO,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC3C,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,eAAe,CAAC;IAEzF,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC;AAChD,CAAC;AAND,kDAMC","sourcesContent":["import {constructorOf} from \"./constructorOf\";\n\nexport function toStringConstructor(target: any): string {\n  const ctr = constructorOf(target);\n  const strings = ctr.toString().split(\"\\n\");\n  const ctrString = strings.find((s) => s.indexOf(\"constructor(\") > -1) || \"constructor()\";\n\n  return `${ctrString.replace(\"{\", \"\").trim()}`;\n}\n"]}