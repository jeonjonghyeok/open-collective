{"version":3,"file":"useDecorators.js","sourceRoot":"","sources":["../../../src/utils/decorators/useDecorators.ts"],"names":[],"mappings":";;;AAGA;;;GAGG;AACH,SAAgB,eAAe,CAAC,GAAG,UAAgG;IACjI,OAAO,aAAa,CAAC,GAAG,UAAU,CAAC,CAAC;AACtC,CAAC;AAFD,0CAEC;AAED,SAAgB,aAAa,CAAC,GAAG,UAA0B;IACzD,OAAO,CAAC,GAAG,IAAyB,EAAE,EAAE;QACtC,UAAU;aACP,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;aACvB,OAAO,CAAC,CAAC,SAAmB,EAAE,EAAE;YAC/B,SAAS,CAAC,GAAG,IAAI,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;AACJ,CAAC;AARD,sCAQC","sourcesContent":["import {DecoratorParameters} from \"../../interfaces/DecoratorParameters\";\nimport {AnyDecorator} from \"../../interfaces/AnyDecorator\";\n\n/**\n * @deprecated Since 2020-11-28. Use useDecorators function.\n * @param decorators\n */\nexport function applyDecorators(...decorators: (any | ClassDecorator | MethodDecorator | PropertyDescriptor | ParameterDecorator)[]): any {\n  return useDecorators(...decorators);\n}\n\nexport function useDecorators(...decorators: AnyDecorator[]): any {\n  return (...args: DecoratorParameters) => {\n    decorators\n      .filter((o: any) => !!o)\n      .forEach((decorator: Function) => {\n        decorator(...args);\n      });\n  };\n}\n"]}