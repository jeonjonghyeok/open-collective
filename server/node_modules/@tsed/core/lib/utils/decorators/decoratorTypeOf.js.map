{"version":3,"file":"decoratorTypeOf.js","sourceRoot":"","sources":["../../../src/utils/decorators/decoratorTypeOf.ts"],"names":[],"mappings":";;;AAAA,gEAA2D;AAC3D,gDAA2C;AAE3C;;GAEG;AACH,SAAgB,gBAAgB,CAAC,IAAW,EAAE,QAAQ,GAAG,KAAK;IAC5D,MAAM,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC;IAEnC,OAAO,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAG,IAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAS,CAAC;AACnE,CAAC;AAJD,4CAIC;AAED,SAAgB,eAAe,CAAC,IAAW;IACzC,MAAM,CAAC,MAAM,EAAE,WAAW,EAAE,UAAU,CAAC,GAAG,IAAI,CAAC;IAE/C,MAAM,UAAU,GAAG,CAAC,IAAY,EAAO,EAAE;QACvC,OAAO,MAAM,KAAK,iBAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,SAAS,CAAC;IAC9D,CAAC,CAAC;IAEF,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;QAClC,OAAO,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,uBAAuB,CAAC;KACxE;IAED,IAAI,UAAU,IAAI,UAAU,CAAC,KAAK,EAAE;QAClC,OAAO,UAAU,CAAC,QAAQ,CAAC,CAAC;KAC7B;IAED,IAAI,CAAC,WAAW,IAAI,UAAU,KAAK,SAAS,CAAC,IAAI,UAAU,EAAE;QAC3D,OAAO,UAAU,CAAC,UAAU,CAAC,CAAC;KAC/B;IAED,OAAO,+BAAc,CAAC,KAAK,CAAC;AAC9B,CAAC;AApBD,0CAoBC","sourcesContent":["import {DecoratorTypes} from \"../../domain/DecoratorTypes\";\nimport {classOf} from \"../objects/classOf\";\n\n/**\n * @deprecated Since 2020-11-28. Use decoratorTypeOf function.\n */\nexport function getDecoratorType(args: any[], longType = false): DecoratorTypes {\n  const type = decoratorTypeOf(args);\n\n  return longType ? type : ((type as string).split(\".\")[0] as any);\n}\n\nexport function decoratorTypeOf(args: any[]): DecoratorTypes {\n  const [target, propertyKey, descriptor] = args;\n\n  const staticType = (type: string): any => {\n    return target !== classOf(target) ? type : `${type}.static`;\n  };\n\n  if (typeof descriptor === \"number\") {\n    return propertyKey ? staticType(\"parameter\") : \"parameter.constructor\";\n  }\n\n  if (descriptor && descriptor.value) {\n    return staticType(\"method\");\n  }\n\n  if ((propertyKey && descriptor === undefined) || descriptor) {\n    return staticType(\"property\");\n  }\n\n  return DecoratorTypes.CLASS;\n}\n"]}