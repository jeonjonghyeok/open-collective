export declare class Hooks {
    private listeners;
    /**
     * Listen a hook event
     * @param event
     * @param cb
     */
    on(event: string, cb: Function): this;
    /**
     * Remove a listener attached to an event
     * @param event
     * @param cb
     */
    off(event: string, cb: Function): this;
    /**
     * Trigger an event and call listener.
     * @param event
     * @param args
     * @param callThis
     */
    emit(event: string, args?: any[], callThis?: any): void;
    /**
     * Trigger an event, listener alter given value and return it.
     * @param event
     * @param value
     * @param args
     * @param callThis
     */
    alter(event: string, value: any, args?: any[], callThis?: any): any;
    /**
     * Trigger an event and call async listener.
     * @param event
     * @param args
     * @param callThis
     */
    asyncEmit(event: string, args?: any[], callThis?: any): Promise<void>;
    /**
     * Trigger an event, async listener alter given value and return it.
     * @param event
     * @param value
     * @param args
     * @param callThis
     */
    asyncAlter(event: string, value: any, args?: string[], callThis?: any): Promise<any>;
}
