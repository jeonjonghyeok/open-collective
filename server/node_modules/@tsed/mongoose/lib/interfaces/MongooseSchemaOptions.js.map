{"version":3,"file":"MongooseSchemaOptions.js","sourceRoot":"","sources":["../../src/interfaces/MongooseSchemaOptions.ts"],"names":[],"mappings":"","sourcesContent":["import {HookDoneFunction, HookErrorCallback, HookNextFunction, NativeError, Schema, SchemaOptions} from \"mongoose\";\nimport {MongooseDocument} from \"./MongooseDocument\";\n\nexport interface MongoosePreHookAsyncCB<T> {\n  (doc: MongooseDocument<T>, next: HookNextFunction, done: HookDoneFunction): any;\n}\n\nexport interface MongoosePreHookSyncCB<T> {\n  (doc: MongooseDocument<T>, next: HookNextFunction): any;\n}\n\nexport interface MongoosePostErrorHookCB<T> {\n  (error: any, doc: MongooseDocument<T>, next: (err?: NativeError) => void): void;\n}\n\nexport interface MongoosePostHookCB<T> {\n  (doc: MongooseDocument<T>, next: (err?: NativeError) => void): void;\n}\n\nexport interface MongoosePreHook {\n  method: string;\n  fn: MongoosePreHookSyncCB<any> | MongoosePreHookAsyncCB<any>;\n  parallel?: boolean;\n  errorCb?: HookErrorCallback;\n}\n\nexport interface MongoosePostHook {\n  method: string;\n  fn: MongoosePostHookCB<any> | MongoosePostErrorHookCB<any>;\n}\n\nexport interface MongoosePluginOptions {\n  plugin: (schema: Schema, options?: any) => void;\n  options?: any;\n}\n\nexport interface MongooseIndexOptions {\n  fields: object;\n  options?: any;\n}\n\nexport interface MongooseSchemaOptions {\n  schemaOptions?: SchemaOptions;\n  plugins?: MongoosePluginOptions[];\n  indexes?: MongooseIndexOptions[];\n  pre?: MongoosePreHook[];\n  post?: MongoosePostHook[];\n}\n"]}