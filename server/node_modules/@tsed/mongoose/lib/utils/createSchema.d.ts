import { Type } from "@tsed/core";
import { JsonEntityStore } from "@tsed/schema";
import * as mongoose from "mongoose";
import { SchemaDefinition, SchemaTypeOpts } from "mongoose";
import { MongooseSchemaOptions } from "../interfaces";
export interface MongooseSchemaMetadata {
    schema: SchemaDefinition;
    virtuals: Map<string, any>;
}
export declare function createSchema(target: Type<any>, options?: MongooseSchemaOptions): mongoose.Schema;
/**
 * Get a schema already created. If the schema doesn't exists in registry, it'll be created.
 * @param target
 * @param options
 */
export declare function getSchema(target: Type<any>, options?: MongooseSchemaOptions): mongoose.Schema;
/**
 * @ignore
 */
export declare function buildMongooseSchema(target: any): MongooseSchemaMetadata;
/**
 * @ignore
 */
export declare function createSchemaTypeOptions(propEntity: JsonEntityStore): SchemaTypeOpts<any>;
