"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VirtualRef = void 0;
const schema_1 = require("@tsed/schema");
const core_1 = require("@tsed/core");
const constants_1 = require("../constants");
function getRef(opts) {
    const ref = opts.ref || opts.type;
    return core_1.isString(ref) ? ref : core_1.Store.from(ref).get(constants_1.MONGOOSE_MODEL_NAME);
}
function getType(opts) {
    const ref = opts.ref || opts.type;
    return !core_1.isString(ref) ? ref : Object;
}
function getInitialOpts(options, foreignField) {
    return core_1.isPlainObject(options) ? options : { type: options, foreignField };
}
function mapToSchema(opts) {
    const ref = getRef(opts);
    const schema = {
        ref,
        localField: opts.localField || "_id",
        foreignField: opts.foreignField,
        justOne: opts.justOne || false,
        options: opts.options
    };
    return schema;
}
function VirtualRef(options, foreignField) {
    const opts = getInitialOpts(options, foreignField);
    const schema = mapToSchema(opts);
    const type = getType(opts);
    return core_1.useDecorators(core_1.StoreMerge(constants_1.MONGOOSE_SCHEMA, schema), type && (schema.justOne ? schema_1.Property(type) : schema_1.CollectionOf(type)));
}
exports.VirtualRef = VirtualRef;
//# sourceMappingURL=virtualRef.js.map