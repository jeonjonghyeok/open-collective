{"version":3,"file":"objectID.js","sourceRoot":"","sources":["../../src/decorators/objectID.ts"],"names":[],"mappings":";;;AAAA,qCAAyC;AACzC,yCAAiE;AAGjE;;;;;;;;;;;;;;;GAeG;AACH,SAAgB,QAAQ,CAAC,IAAa;IACpC,OAAO,oBAAa,CAClB,IAAI,IAAI,aAAI,CAAC,IAAI,CAAC,EAClB,gBAAO,CAAC,mBAAmB,CAAC,EAC5B,oBAAW,CAAC,mBAAmB,CAAC,EAChC,gBAAO,CAAC,0BAA0B,CAAC,CACpC,CAAC;AACJ,CAAC;AAPD,4BAOC","sourcesContent":["import {useDecorators} from \"@tsed/core\";\nimport {Description, Example, Name, Pattern} from \"@tsed/schema\";\nimport {Types} from \"mongoose\";\n\n/**\n * Tell Mongoose whether to define an ObjectId property.\n * ### Example\n *\n * ```typescript\n * @Model()\n * export class EventModel {\n *   @ObjectId('id')\n *   _id: string;\n * }\n * ```\n * @param name\n * @decorator\n * @mongoose\n * @schema\n */\nexport function ObjectID(name?: string) {\n  return useDecorators(\n    name && Name(name),\n    Pattern(/^[0-9a-fA-F]{24}$/),\n    Description(\"Mongoose ObjectId\"),\n    Example(\"5ce7ad3028890bd71749d477\")\n  );\n}\n\nexport type ObjectID = Types.ObjectId;\n"]}