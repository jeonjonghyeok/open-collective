{"version":3,"file":"dynamicRef.js","sourceRoot":"","sources":["../../src/decorators/dynamicRef.ts"],"names":[],"mappings":";;;AAAA,qCAAqD;AACrD,yCAA4D;AAC5D,uCAAkD;AAClD,4CAA6C;AAE7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BG;AACH,SAAgB,UAAU,CAAC,OAAe;IACxC,OAAO,oBAAa,CAClB,iBAAQ,CAAC,MAAM,CAAC,EAChB,gBAAO,CAAC,0BAA0B,CAAC,EACnC,oBAAW,CAAC,uBAAuB,CAAC,EACpC,iBAAU,CAAC,2BAAe,EAAE;QAC1B,IAAI,EAAE,iBAAc,CAAC,KAAK,CAAC,QAAQ;QACnC,OAAO;KACR,CAAC,CACH,CAAC;AACJ,CAAC;AAVD,gCAUC","sourcesContent":["import {StoreMerge, useDecorators} from \"@tsed/core\";\nimport {Description, Example, Property} from \"@tsed/schema\";\nimport {Schema as MongooseSchema} from \"mongoose\";\nimport {MONGOOSE_SCHEMA} from \"../constants\";\n\n/**\n * Define a property as mongoose reference to other Model (decorated with @Model).\n *\n * ### Example\n *\n * ```typescript\n * @Model()\n * class FooModel {\n *\n *    @DynamicRef('type')\n *    field: DynamicRef<OtherFooModel | OtherModel>\n *\n *    @Enum(['OtherFooModel', 'OtherModel'])\n *    type: string\n * }\n *\n * @Model()\n * class OtherFooModel {\n * }\n *\n * @Model()\n * class OtherModel {\n * }\n * ```\n *\n * @param refPath\n * @returns {Function}\n * @decorator\n * @mongoose\n * @property\n */\nexport function DynamicRef(refPath: string): PropertyDecorator {\n  return useDecorators(\n    Property(String),\n    Example(\"5ce7ad3028890bd71749d477\"),\n    Description(\"Mongoose Ref ObjectId\"),\n    StoreMerge(MONGOOSE_SCHEMA, {\n      type: MongooseSchema.Types.ObjectId,\n      refPath\n    })\n  );\n}\n\nexport type DynamicRef<T> = T | string;\n"]}