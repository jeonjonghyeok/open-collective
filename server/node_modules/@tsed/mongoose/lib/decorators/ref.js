"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Ref = void 0;
const core_1 = require("@tsed/core");
const schema_1 = require("@tsed/schema");
const mongoose_1 = require("mongoose");
const constants_1 = require("../constants");
const MongooseSchemaTypes_1 = require("../interfaces/MongooseSchemaTypes");
/**
 * Define a property as mongoose reference to other Model (decorated with @Model).
 *
 * ### Example
 *
 * ```typescript
 *
 * @Model()
 * class FooModel {
 *
 *    @Ref(Foo2Model)
 *    field: Ref<Foo2Model>
 *
 *    @Ref(Foo2Model)
 *    list: Ref<Foo2Model>[]
 * }
 *
 * @Model()
 * class Foo2Model {
 * }
 * ```
 *
 * @param model
 * @param type
 * @returns {Function}
 * @decorator
 * @mongoose
 * @property
 */
function Ref(model, type = MongooseSchemaTypes_1.MongooseSchemaTypes.OBJECT_ID) {
    return core_1.useDecorators(schema_1.Property(String), schema_1.Example("5ce7ad3028890bd71749d477"), schema_1.Description("Mongoose Ref ObjectId"), core_1.StoreMerge(constants_1.MONGOOSE_SCHEMA, {
        type: mongoose_1.Schema.Types[type],
        ref: typeof model === "string" ? model : core_1.Store.from(model).get(constants_1.MONGOOSE_MODEL_NAME)
    }));
}
exports.Ref = Ref;
//# sourceMappingURL=ref.js.map