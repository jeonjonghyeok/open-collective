{"version":3,"file":"ref.js","sourceRoot":"","sources":["../../src/decorators/ref.ts"],"names":[],"mappings":";;;AAAA,qCAA4D;AAC5D,yCAA4D;AAC5D,uCAAkD;AAClD,4CAAkE;AAClE,2EAAsE;AAEtE;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AACH,SAAgB,GAAG,CAAC,KAAmB,EAAE,OAA4B,yCAAmB,CAAC,SAAS;IAChG,OAAO,oBAAa,CAClB,iBAAQ,CAAC,MAAM,CAAC,EAChB,gBAAO,CAAC,0BAA0B,CAAC,EACnC,oBAAW,CAAC,uBAAuB,CAAC,EACpC,iBAAU,CAAC,2BAAe,EAAE;QAC1B,IAAI,EAAE,iBAAc,CAAC,KAAK,CAAC,IAAI,CAAC;QAChC,GAAG,EAAE,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,YAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,+BAAmB,CAAC;KACpF,CAAC,CACH,CAAC;AACJ,CAAC;AAVD,kBAUC","sourcesContent":["import {Store, StoreMerge, useDecorators} from \"@tsed/core\";\nimport {Description, Example, Property} from \"@tsed/schema\";\nimport {Schema as MongooseSchema} from \"mongoose\";\nimport {MONGOOSE_MODEL_NAME, MONGOOSE_SCHEMA} from \"../constants\";\nimport {MongooseSchemaTypes} from \"../interfaces/MongooseSchemaTypes\";\n\n/**\n * Define a property as mongoose reference to other Model (decorated with @Model).\n *\n * ### Example\n *\n * ```typescript\n *\n * @Model()\n * class FooModel {\n *\n *    @Ref(Foo2Model)\n *    field: Ref<Foo2Model>\n *\n *    @Ref(Foo2Model)\n *    list: Ref<Foo2Model>[]\n * }\n *\n * @Model()\n * class Foo2Model {\n * }\n * ```\n *\n * @param model\n * @param type\n * @returns {Function}\n * @decorator\n * @mongoose\n * @property\n */\nexport function Ref(model: string | any, type: MongooseSchemaTypes = MongooseSchemaTypes.OBJECT_ID): PropertyDecorator {\n  return useDecorators(\n    Property(String),\n    Example(\"5ce7ad3028890bd71749d477\"),\n    Description(\"Mongoose Ref ObjectId\"),\n    StoreMerge(MONGOOSE_SCHEMA, {\n      type: MongooseSchema.Types[type],\n      ref: typeof model === \"string\" ? model : Store.from(model).get(MONGOOSE_MODEL_NAME)\n    })\n  );\n}\n\nexport type Ref<T> = T | string;\n"]}