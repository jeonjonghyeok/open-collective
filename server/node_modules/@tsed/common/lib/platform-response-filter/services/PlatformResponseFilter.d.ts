import { Type } from "@tsed/core";
import { InjectorService } from "@tsed/di";
import { PlatformContext } from "../../platform/domain/PlatformContext";
import { ResponseFilterKey } from "../domain/ResponseFiltersContainer";
import { ResponseFilterMethods } from "../interfaces/ResponseFilterMethods";
/**
 * @ignore
 */
export declare function getContentType(data: any, ctx: PlatformContext): any;
/**
 * @platform
 */
export declare class PlatformResponseFilter {
    types: Map<ResponseFilterKey, ResponseFilterMethods>;
    injector: InjectorService;
    protected responseFilters: Type<ResponseFilterMethods>[];
    get contentTypes(): ResponseFilterKey[];
    $onInit(): void;
    getBestContentType(data: any, ctx: PlatformContext): any;
    transform(data: unknown, ctx: PlatformContext): any;
}
