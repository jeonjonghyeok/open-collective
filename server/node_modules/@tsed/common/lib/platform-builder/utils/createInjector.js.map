{"version":3,"file":"createInjector.js","sourceRoot":"","sources":["../../../src/platform-builder/utils/createInjector.ts"],"names":[],"mappings":";;;AAAA,iCAA0E;AAC1E,yCAAkC;AAClC,uFAAkF;AAElF,aAAI,CAAC,IAAI,GAAG,MAAM,CAAC;AAEnB,SAAgB,cAAc,CAAC,WAAwC,EAAE;IACvE,MAAM,QAAQ,GAAG,IAAI,oBAAe,EAAE,CAAC;IACvC,QAAQ,CAAC,QAAQ,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;IACpD,QAAQ,CAAC,MAAM,GAAG,aAAI,CAAC;IACvB,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAEhC,mBAAc,CAAC,QAAQ,CAAC,CAAC;IAEzB,OAAO,QAAQ,CAAC;AAClB,CAAC;AATD,wCASC;AAED,SAAS,qBAAqB,CAAC,QAAyB;IACtD,MAAM,QAAQ,GAAG,oBAAe,CAAC,GAAG,CAAC,6CAAqB,CAAE,CAAC,KAAK,EAAE,CAAC;IAErE,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAwB,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAC9E,QAAQ,CAAC,WAAW,CAAC,6CAAqB,EAAE,QAAQ,CAAC,CAAC;IAEtD,OAAO,QAAQ,CAAC,QAAe,CAAC;AAClC,CAAC","sourcesContent":["import {GlobalProviders, InjectorService, setLoggerLevel} from \"@tsed/di\";\nimport {$log} from \"@tsed/logger\";\nimport {PlatformConfiguration} from \"../../config/services/PlatformConfiguration\";\n\n$log.name = \"TSED\";\n\nexport function createInjector(settings: Partial<TsED.Configuration> = {}) {\n  const injector = new InjectorService();\n  injector.settings = createSettingsService(injector);\n  injector.logger = $log;\n  injector.settings.set(settings);\n\n  setLoggerLevel(injector);\n\n  return injector;\n}\n\nfunction createSettingsService(injector: InjectorService): PlatformConfiguration & TsED.Configuration {\n  const provider = GlobalProviders.get(PlatformConfiguration)!.clone();\n\n  provider.instance = injector.invoke<PlatformConfiguration>(provider.useClass);\n  injector.addProvider(PlatformConfiguration, provider);\n\n  return provider.instance as any;\n}\n"]}