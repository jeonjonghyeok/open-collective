{"version":3,"file":"importRoutes.js","sourceRoot":"","sources":["../../../src/platform-builder/utils/importRoutes.ts"],"names":[],"mappings":";;;AAAA,iCAA0D;AAGnD,KAAK,UAAU,YAAY,CAAC,QAAyB;IAC1D,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;IAEzC,MAAM,SAAS,GAAG,MAAM,oBAAe,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC,CAAC;IAEnG,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,EAAE,EAAE,CAAC,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC,CAAC;AACpG,CAAC;AAND,oCAMC","sourcesContent":["import {importProviders, InjectorService} from \"@tsed/di\";\nimport {IRoute} from \"../../platform/interfaces/IRoute\";\n\nexport async function importRoutes(injector: InjectorService): Promise<IRoute[]> {\n  injector.logger.debug(\"Scan components\");\n\n  const providers = await importProviders(injector.settings, [\"imports\", \"mount\", \"componentsScan\"]);\n\n  return providers.filter((provider) => !!provider.route).map(({route, token}) => ({route, token}));\n}\n"]}