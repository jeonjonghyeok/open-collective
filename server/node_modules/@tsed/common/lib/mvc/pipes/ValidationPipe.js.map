{"version":3,"file":"ValidationPipe.js","sourceRoot":"","sources":["../../../src/mvc/pipes/ValidationPipe.ts"],"names":[],"mappings":";;;;AAAA,iCAAoC;AACpC,+EAA0E;AAM1E,IAAa,cAAc,GAA3B,MAAa,cAAc;IACzB,SAAS,CAAC,KAAU,EAAE,QAAuB;QAC3C,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAEtC,OAAO,KAAK,CAAC;IACf,CAAC;IAES,eAAe,CAAC,KAAU,EAAE,QAAuB;QAC3D,IAAI,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;YAC9B,MAAM,iDAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC9C;QAED,OAAO,IAAI,CAAC;IACd,CAAC;CACF,CAAA;AAdY,cAAc;IAH1B,eAAU,CAAC;QACV,IAAI,EAAE,WAAW;KAClB,CAAC;GACW,cAAc,CAc1B;AAdY,wCAAc","sourcesContent":["import {Injectable} from \"@tsed/di\";\nimport {RequiredValidationError} from \"../errors/RequiredValidationError\";\nimport {IPipe, ParamMetadata} from \"../models/ParamMetadata\";\n\n@Injectable({\n  type: \"validator\"\n})\nexport class ValidationPipe implements IPipe {\n  transform(value: any, metadata: ParamMetadata) {\n    this.checkIsRequired(value, metadata);\n\n    return value;\n  }\n\n  protected checkIsRequired(value: any, metadata: ParamMetadata) {\n    if (metadata.isRequired(value)) {\n      throw RequiredValidationError.from(metadata);\n    }\n\n    return true;\n  }\n}\n"]}