{"version":3,"file":"EndpointMetadata.js","sourceRoot":"","sources":["../../../src/mvc/models/EndpointMetadata.ts"],"names":[],"mappings":"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","sourcesContent":["import {classOf, DecoratorTypes, deepExtends, descriptorOf, Enumerable, isFunction, nameOf, prototypeOf, Store, Type} from \"@tsed/core\";\nimport {getOperationsStores, JsonEntityComponent, JsonEntityStore, JsonEntityStoreOptions, JsonOperation, JsonResponse} from \"@tsed/schema\";\nimport {ParamMetadata} from \"./ParamMetadata\";\n\nexport interface EndpointConstructorOptions extends JsonEntityStoreOptions {\n  beforeMiddlewares?: Function[];\n  middlewares?: Function[];\n  afterMiddlewares?: Function[];\n}\n\nexport interface EndpointViewOptions {\n  path: string;\n  options: any;\n}\n\nexport interface EndpointRedirectOptions {\n  status: number | undefined;\n  url: string;\n}\n\n/**\n * EndpointMetadata contains metadata about a controller and his method.\n * Each annotation (@Get, @Body...) attached to a method are stored in a endpoint.\n * EndpointMetadata convert this metadata to an array which contain arguments to call an Express method.\n *\n * Example :\n *\n *    @Controller(\"/my-path\")\n *    provide MyClass {\n *\n *        @Get(\"/\")\n *        @Authenticated()\n *        public myMethod(){}\n *    }\n *\n */\n@JsonEntityComponent(DecoratorTypes.METHOD)\nexport class EndpointMetadata extends JsonEntityStore implements EndpointConstructorOptions {\n  // LIFECYCLE\n  @Enumerable()\n  public beforeMiddlewares: any[] = [];\n\n  @Enumerable()\n  public middlewares: any[] = [];\n\n  @Enumerable()\n  public afterMiddlewares: any[] = [];\n\n  @Enumerable()\n  public statusCode: number = 200;\n\n  constructor(options: EndpointConstructorOptions) {\n    super({\n      store: Store.fromMethod(options.target, options.propertyKey!),\n      descriptor: descriptorOf(options.target, options.propertyKey!),\n      ...options\n    });\n\n    const {beforeMiddlewares = [], middlewares = [], afterMiddlewares = []} = options;\n\n    this.after(afterMiddlewares);\n    this.before(beforeMiddlewares);\n    this.use(middlewares);\n  }\n\n  get targetName(): string {\n    return nameOf(this.token);\n  }\n\n  get params(): ParamMetadata[] {\n    return (Array.from(this.children.values()) as unknown) as ParamMetadata[];\n  }\n\n  /**\n   * Return the JsonOperation\n   */\n  get operation(): JsonOperation {\n    return this._operation;\n  }\n\n  get operationPaths() {\n    return this.operation.operationPaths;\n  }\n\n  get view(): EndpointViewOptions {\n    return this.store.get(\"view\") as EndpointViewOptions;\n  }\n\n  set view(view: EndpointViewOptions) {\n    this.store.set(\"view\", view);\n  }\n\n  get location(): string {\n    return this.store.get(\"location\") as string;\n  }\n\n  set location(url: string) {\n    this.store.set(\"location\", url);\n  }\n\n  get redirect(): EndpointRedirectOptions {\n    return this.store.get(\"redirect\") as any;\n  }\n\n  set redirect(options: EndpointRedirectOptions) {\n    this.store.set(\"redirect\", {\n      status: 302,\n      ...options\n    });\n  }\n\n  /**\n   * Get all endpoints from a given class and his parents.\n   * @param {Type<any>} target\n   * @returns {EndpointMetadata[]}\n   */\n  static getEndpoints(target: Type<any>): EndpointMetadata[] {\n    const operations = getOperationsStores<EndpointMetadata>(target);\n\n    return Array.from(operations.values()).map((endpoint) => {\n      endpoint = endpoint.clone();\n      endpoint.token = classOf(target);\n\n      return endpoint;\n    });\n  }\n\n  /**\n   * Get an endpoint.\n   * @param target\n   * @param propertyKey\n   * @param descriptor\n   */\n  static get(target: Type<any>, propertyKey: string | symbol, descriptor?: PropertyDescriptor): EndpointMetadata {\n    descriptor = descriptor || descriptorOf(prototypeOf(target), propertyKey);\n\n    return JsonEntityStore.from<EndpointMetadata>(prototypeOf(target), propertyKey, descriptor);\n  }\n\n  addOperationPath(method: string, path: string | RegExp, options: any = {}) {\n    return this.operation.addOperationPath(method, path, options);\n  }\n\n  /**\n   * Find the a value at the controller level. Let this value be extended or overridden by the endpoint itself.\n   *\n   * @param key\n   * @returns {any}\n   */\n  get<T = any>(key: any): T {\n    const ctrlValue = Store.from(this.target).get(key);\n    let meta = deepExtends(undefined, ctrlValue);\n    const endpointValue = this.store.get(key);\n    if (endpointValue !== undefined) {\n      meta = deepExtends(meta, endpointValue);\n    }\n\n    return meta;\n  }\n\n  /**\n   * Append middlewares to the beforeMiddlewares list.\n   * @param args\n   * @returns {EndpointMetadata}\n   */\n  public before(args: Function[]): this {\n    this.beforeMiddlewares = this.beforeMiddlewares.concat(args).filter(isFunction);\n\n    return this;\n  }\n\n  /**\n   * Append middlewares to the afterMiddlewares list.\n   * @param args\n   * @returns {EndpointMetadata}\n   */\n  public after(args: Function[]): this {\n    this.afterMiddlewares = this.afterMiddlewares.concat(args).filter(isFunction);\n\n    return this;\n  }\n\n  /**\n   * Store all arguments collected via Annotation.\n   * @param args\n   */\n  public use(args: Function[]) {\n    this.middlewares = this.middlewares.concat(args).filter(isFunction);\n\n    return this;\n  }\n\n  public clone() {\n    const endpoint = new EndpointMetadata({\n      ...this,\n      target: this.target,\n      propertyKey: this.propertyKey,\n      descriptor: this.descriptor,\n      store: this.store,\n      children: this.children\n    });\n\n    endpoint.collectionType = this.collectionType;\n    endpoint._type = this._type;\n    endpoint._operation = this.operation;\n    endpoint._schema = this._schema;\n    endpoint.middlewares = [...this.middlewares];\n    endpoint.afterMiddlewares = [...this.afterMiddlewares];\n    endpoint.beforeMiddlewares = [...this.beforeMiddlewares];\n\n    return endpoint;\n  }\n}\n"]}