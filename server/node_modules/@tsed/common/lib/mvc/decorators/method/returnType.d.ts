import { MetadataTypes, Type } from "@tsed/core";
import { OS3Header } from "@tsed/openspec";
import { ReturnsChainedDecorators } from "@tsed/schema";
/**
 * @deprecated Since v6.
 * @ignore
 */
export interface ReturnTypeHeader extends OS3Header {
    value?: string | number;
    type?: string;
}
/**
 * @deprecated Since v6.
 * @ignore
 */
export interface ReturnTypeOptions extends Partial<MetadataTypes> {
    code?: number;
    headers?: {
        [key: string]: ReturnTypeHeader;
    };
    [key: string]: any;
}
/**
 * Define the returned type for the serialization.
 *
 * ::: warning
 * This decorator will be removed in v6 in favor of @@Returns@@ from @tsed/schema.
 * For v5 user, use @@Returns@@ decorator from @tsed/common then in v6 switch to @tsed/schema.
 * :::
 *
 * ```typescript
 * @Controller('/')
 * export class Ctrl {
 *    @Get('/')
 *    @ReturnType({code: 200, type: User, collectionType: Map})
 *    get(): Promise<Map<User>> { }
 * }
 *
 * ```
 *
 * @returns {Function}
 * @param response
 * @decorator
 * @operation
 * @response
 * @deprecated Since v6. Use @Returns decorator from @tsed/schema
 * @ignore
 */
export declare function ReturnType(response?: Partial<ReturnTypeOptions>): ReturnsChainedDecorators;
/**
 * Add responses documentation for a specific status code.
 *
 * ::: warning
 * This decorator will be removed in v6 in favor of @@Returns@@ from @tsed/schema.
 * For v5 user, use @@Returns@@ decorator from @tsed/common then in v6 switch to @tsed/schema.
 * :::
 *
 * ## Examples
 * ## With status code
 *
 * ```typescript
 *  @Returns(404, {description: "Not found"})
 *  @Returns(200, {description: "OK", type: Model})
 *  async myMethod(): Promise<Model>  {
 *
 *  }
 * ```
 *
 * This example will produce this documentation in swagger:
 *
 * ```json
 * {
 *   "responses": {
 *     "404": {
 *       "description": "Description"
 *     },
 *     "2OO": {
 *       "description": "Description",
 *       "schema": {"schemaOfModel": "..."}
 *     }
 *   }
 * }
 * ```
 *
 * @param statusCode Code status
 * @param options Swagger responses documentations
 * @operation
 * @response
 * @decorator
 * @deprecated Since v6. Use @Returns decorator from @tsed/schema
 * @ignore
 */
export declare function Returns(statusCode: number, options: Partial<ReturnTypeOptions>): ReturnsChainedDecorators;
/**
 * @deprecated Since v6. Use @Returns decorator from @tsed/schema
 * @ignore
 */
export declare function Returns(options: Partial<ReturnTypeOptions>): ReturnsChainedDecorators;
/**
 * @deprecated Since v6. Use @Returns decorator from @tsed/schema
 * @ignore
 */
export declare function Returns(model: Type<any>): ReturnsChainedDecorators;
/**
 * @deprecated Since v6. Use @Returns decorator from @tsed/schema
 * @ignore
 */
export declare function Returns(statusCode: number, model: Type<any>): ReturnsChainedDecorators;
/**
 * @deprecated Since v6. Use @Returns decorator from @tsed/schema
 * @ignore
 */
export declare function Returns(model: Type<any>, options: Partial<ReturnTypeOptions>): ReturnsChainedDecorators;
/**
 * Add responses documentation for a specific status code.
 *
 * ::: warning
 * This decorator will be removed in v6 in favor of @@Returns@@ from @tsed/schema.
 * For v5 user, use @@ReturnsArray@@ decorator from @tsed/common then in v6 switch to `@Returns(Array).Of(User)` from @tsed/schema.
 * :::
 *
 * ## Examples
 * ## With status code
 *
 * ```typescript
 * import {ReturnsArray} from "@tsed/common";
 * import {Returns} from "@tsed/schema";
 *
 * @Controller("/")
 * class MyController {
 *   @ReturnsArray(200, Model) // deprecated
 *   async myMethod(): Promise<Model> {}
 *
 *   @Returns(200, Array).Of(Model).Description('description')
 *   async myMethod(): Promise<Model> {}
 * }
 * ```
 *
 * @param statusCode Code status
 * @param options Swagger responses documentations
 * @returns {Function}
 * @decorator
 * @swagger
 * @operation
 * @response
 * @deprecated Since v6. Use @Returns decorator from @tsed/schema
 */
export declare function ReturnsArray(statusCode: number, options: Partial<ReturnTypeOptions>): ReturnsChainedDecorators;
/**
 * @deprecated Since v6. Use @Returns decorator from @tsed/schema
 */
export declare function ReturnsArray(statusCode: number, model: Type<any>): ReturnsChainedDecorators;
/**
 * @deprecated Since v6. Use @Returns decorator from @tsed/schema
 */
export declare function ReturnsArray(options: Partial<ReturnTypeOptions>): ReturnsChainedDecorators;
/**
 * @deprecated Since v6. Use @Returns decorator from @tsed/schema
 */
export declare function ReturnsArray(model: Type<any>): ReturnsChainedDecorators;
/**
 * @deprecated Since v6. Use @Returns decorator from @tsed/schema
 */
export declare function ReturnsArray(model: Type<any>, options: Partial<ReturnTypeOptions>): ReturnsChainedDecorators;
