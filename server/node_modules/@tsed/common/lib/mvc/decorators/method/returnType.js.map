{"version":3,"file":"returnType.js","sourceRoot":"","sources":["../../../../src/mvc/decorators/method/returnType.ts"],"names":[],"mappings":";;;AAEA,yCAAoE;AAwBpE;;GAEG;AACH,SAAS,wBAAwB,CAAC,IAAW;IAC3C,MAAM,aAAa,GAAQ,EAAE,CAAC;IAE9B,IAAI,CAAC,OAAO,CAAC,CAAC,KAAU,EAAE,EAAE;QAC1B,aAAa,CAAC,OAAO,KAAK,CAAC,GAAG,KAAK,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,MAAM,EAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,GAAG,EAAS,EAAE,QAAQ,EAAE,IAAI,EAAC,GAAG,aAAa,CAAC;IAElF,IAAI,IAAI,EAAE;QACR,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;KACrB;IAED,OAAO;QACL,GAAG,OAAO;QACV,IAAI;QACJ,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,GAAG;QACjC,cAAc,EAAE,OAAO,CAAC,cAAc,IAAI,OAAO,CAAC,UAAU;KAC7D,CAAC;AACJ,CAAC;AAED;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACH,SAAgB,UAAU,CAAC,WAAuC,EAAE;IAClE,MAAM,EAAC,IAAI,GAAG,SAAS,EAAE,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,EAAC,GAAG,QAAQ,CAAC;IAElG,IAAI,SAAS,GAAG,gBAAC,CAAC,IAAI,CAAC,CAAC;IAExB,IAAI,cAAc,IAAI,IAAI,EAAE;QAC1B,SAAS,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,CAAC;KACxC;IAED,IAAI,cAAc,EAAE;QAClB,SAAS,GAAG,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;KAChC;IAED,IAAI,OAAO,EAAE;QACX,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;KACxC;IAED,IAAI,WAAW,EAAE;QACf,SAAS,GAAG,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;KAChD;IAED,IAAI,QAAQ,EAAE;QACZ,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KAC1C;IAED,IAAI,MAAM,EAAE;QACV,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,MAAa,CAAC,CAAC;KAC7C;IAED,OAAO,SAAS,CAAC;AACnB,CAAC;AA9BD,gCA8BC;AAkED;;;GAGG;AACH,SAAgB,OAAO,CAAC,GAAG,IAAW;IACpC,OAAO,UAAU,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC;AACpD,CAAC;AAFD,0BAEC;AAqDD;;GAEG;AACH,SAAgB,YAAY,CAAC,GAAG,IAAW;IACzC,OAAO,UAAU,CAAC,EAAC,GAAG,wBAAwB,CAAC,IAAI,CAAC,EAAE,cAAc,EAAE,KAAK,EAAC,CAAC,CAAC;AAChF,CAAC;AAFD,oCAEC","sourcesContent":["import {MetadataTypes, Type} from \"@tsed/core\";\nimport {OS3Header} from \"@tsed/openspec\";\nimport {Returns as R, ReturnsChainedDecorators} from \"@tsed/schema\";\n\n/**\n * @deprecated Since v6.\n * @ignore\n */\nexport interface ReturnTypeHeader extends OS3Header {\n  value?: string | number;\n  type?: string;\n}\n\n/**\n * @deprecated Since v6.\n * @ignore\n */\nexport interface ReturnTypeOptions extends Partial<MetadataTypes> {\n  code?: number;\n  headers?: {\n    [key: string]: ReturnTypeHeader;\n  };\n\n  [key: string]: any;\n}\n\n/**\n * @ignore\n */\nfunction mapStatusResponseOptions(args: any[]): any {\n  const configuration: any = {};\n\n  args.forEach((value: any) => {\n    configuration[typeof value] = value;\n  });\n\n  const {number: code, object: options = {} as any, function: type} = configuration;\n\n  if (type) {\n    options.type = type;\n  }\n\n  return {\n    ...options,\n    code,\n    type: options.type || options.use,\n    collectionType: options.collectionType || options.collection\n  };\n}\n\n/**\n * Define the returned type for the serialization.\n *\n * ::: warning\n * This decorator will be removed in v6 in favor of @@Returns@@ from @tsed/schema.\n * For v5 user, use @@Returns@@ decorator from @tsed/common then in v6 switch to @tsed/schema.\n * :::\n *\n * ```typescript\n * @Controller('/')\n * export class Ctrl {\n *    @Get('/')\n *    @ReturnType({code: 200, type: User, collectionType: Map})\n *    get(): Promise<Map<User>> { }\n * }\n *\n * ```\n *\n * @returns {Function}\n * @param response\n * @decorator\n * @operation\n * @response\n * @deprecated Since v6. Use @Returns decorator from @tsed/schema\n * @ignore\n */\nexport function ReturnType(response: Partial<ReturnTypeOptions> = {}): ReturnsChainedDecorators {\n  const {code = \"default\", collectionType, type, headers, description, examples, schema} = response;\n\n  let decorator = R(code);\n\n  if (collectionType || type) {\n    decorator.Type(collectionType || type);\n  }\n\n  if (collectionType) {\n    decorator = decorator.Of(type);\n  }\n\n  if (headers) {\n    decorator = decorator.Headers(headers);\n  }\n\n  if (description) {\n    decorator = decorator.Description(description);\n  }\n\n  if (examples) {\n    decorator = decorator.Examples(examples);\n  }\n\n  if (schema) {\n    decorator = decorator.Schema(schema as any);\n  }\n\n  return decorator;\n}\n\n/**\n * Add responses documentation for a specific status code.\n *\n * ::: warning\n * This decorator will be removed in v6 in favor of @@Returns@@ from @tsed/schema.\n * For v5 user, use @@Returns@@ decorator from @tsed/common then in v6 switch to @tsed/schema.\n * :::\n *\n * ## Examples\n * ## With status code\n *\n * ```typescript\n *  @Returns(404, {description: \"Not found\"})\n *  @Returns(200, {description: \"OK\", type: Model})\n *  async myMethod(): Promise<Model>  {\n *\n *  }\n * ```\n *\n * This example will produce this documentation in swagger:\n *\n * ```json\n * {\n *   \"responses\": {\n *     \"404\": {\n *       \"description\": \"Description\"\n *     },\n *     \"2OO\": {\n *       \"description\": \"Description\",\n *       \"schema\": {\"schemaOfModel\": \"...\"}\n *     }\n *   }\n * }\n * ```\n *\n * @param statusCode Code status\n * @param options Swagger responses documentations\n * @operation\n * @response\n * @decorator\n * @deprecated Since v6. Use @Returns decorator from @tsed/schema\n * @ignore\n */\nexport function Returns(statusCode: number, options: Partial<ReturnTypeOptions>): ReturnsChainedDecorators;\n/**\n * @deprecated Since v6. Use @Returns decorator from @tsed/schema\n * @ignore\n */\nexport function Returns(options: Partial<ReturnTypeOptions>): ReturnsChainedDecorators;\n/**\n * @deprecated Since v6. Use @Returns decorator from @tsed/schema\n * @ignore\n */\nexport function Returns(model: Type<any>): ReturnsChainedDecorators;\n/**\n * @deprecated Since v6. Use @Returns decorator from @tsed/schema\n * @ignore\n */\nexport function Returns(statusCode: number, model: Type<any>): ReturnsChainedDecorators;\n/**\n * @deprecated Since v6. Use @Returns decorator from @tsed/schema\n * @ignore\n */\nexport function Returns(model: Type<any>, options: Partial<ReturnTypeOptions>): ReturnsChainedDecorators;\n/**\n * @deprecated Since v6. Use @Returns decorator from @tsed/schema\n * @ignore\n */\nexport function Returns(...args: any[]) {\n  return ReturnType(mapStatusResponseOptions(args));\n}\n\n/**\n * Add responses documentation for a specific status code.\n *\n * ::: warning\n * This decorator will be removed in v6 in favor of @@Returns@@ from @tsed/schema.\n * For v5 user, use @@ReturnsArray@@ decorator from @tsed/common then in v6 switch to `@Returns(Array).Of(User)` from @tsed/schema.\n * :::\n *\n * ## Examples\n * ## With status code\n *\n * ```typescript\n * import {ReturnsArray} from \"@tsed/common\";\n * import {Returns} from \"@tsed/schema\";\n *\n * @Controller(\"/\")\n * class MyController {\n *   @ReturnsArray(200, Model) // deprecated\n *   async myMethod(): Promise<Model> {}\n *\n *   @Returns(200, Array).Of(Model).Description('description')\n *   async myMethod(): Promise<Model> {}\n * }\n * ```\n *\n * @param statusCode Code status\n * @param options Swagger responses documentations\n * @returns {Function}\n * @decorator\n * @swagger\n * @operation\n * @response\n * @deprecated Since v6. Use @Returns decorator from @tsed/schema\n */\nexport function ReturnsArray(statusCode: number, options: Partial<ReturnTypeOptions>): ReturnsChainedDecorators;\n/**\n * @deprecated Since v6. Use @Returns decorator from @tsed/schema\n */\nexport function ReturnsArray(statusCode: number, model: Type<any>): ReturnsChainedDecorators;\n/**\n * @deprecated Since v6. Use @Returns decorator from @tsed/schema\n */\nexport function ReturnsArray(options: Partial<ReturnTypeOptions>): ReturnsChainedDecorators;\n/**\n * @deprecated Since v6. Use @Returns decorator from @tsed/schema\n */\nexport function ReturnsArray(model: Type<any>): ReturnsChainedDecorators;\n/**\n * @deprecated Since v6. Use @Returns decorator from @tsed/schema\n */\nexport function ReturnsArray(model: Type<any>, options: Partial<ReturnTypeOptions>): ReturnsChainedDecorators;\n/**\n * @deprecated Since v6. Use @Returns decorator from @tsed/schema\n */\nexport function ReturnsArray(...args: any[]): ReturnsChainedDecorators {\n  return ReturnType({...mapStatusResponseOptions(args), collectionType: Array});\n}\n"]}