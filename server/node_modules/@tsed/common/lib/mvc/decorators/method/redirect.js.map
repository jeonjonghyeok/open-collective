{"version":3,"file":"redirect.js","sourceRoot":"","sources":["../../../../src/mvc/decorators/method/redirect.ts"],"names":[],"mappings":";;;AAAA,qCAAyC;AACzC,yCAAoC;AACpC,6CAAwC;AAoDxC,SAAgB,QAAQ,CAAC,MAAuB,EAAE,GAAY;IAC5D,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAW,CAAC;IACtC,MAAM,GAAG,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;IAEnD,OAAO,oBAAa,CAClB,eAAM,CAAC,MAAM,CAAC,EACd,uBAAU,CAAC,CAAC,QAAQ,EAAE,EAAE;QACtB,QAAQ,CAAC,QAAQ,GAAG,EAAC,MAAM,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,GAAI,EAAC,CAAC;IACnD,CAAC,CAAC,CACH,CAAC;AACJ,CAAC;AAVD,4BAUC","sourcesContent":["import {useDecorators} from \"@tsed/core\";\nimport {Status} from \"@tsed/schema\";\nimport {EndpointFn} from \"./endpointFn\";\n\n/**\n * Redirects to the URL derived from the specified path, with specified status, a positive integer that corresponds to an HTTP status code . If not specified, status defaults to “302 “Found”.\n *\n * ```typescript\n *  @Redirect('/foo/bar')\n *  @Redirect(301, 'http://example.com')\n *  private myMethod() {}\n * ```\n * Redirects can be a fully-qualified URL for redirecting to a different site:\n *\n * ```typescript\n *  @Redirect('http://google.com');\n *  private myMethod() {}\n * ```\n *\n * Redirects can be relative to the root of the host name. For example, if the application is on http://example.com/admin/post/new, the following would redirect to the URL http://example.com/admin:\n *\n * ```typescript\n *  @Redirect('/admin');\n * ```\n * Redirects can be relative to the current URL. For example, from http://example.com/blog/admin/ (notice the trailing slash), the following would redirect to the URL http://example.com/blog/admin/post/new.\n *\n * ```typescript\n *  @Redirect('post/new');\n * ```\n *\n * Redirecting to post/new from http://example.com/blog/admin (no trailing slash), will redirect to http://example.com/blog/post/new.\n *\n * If you found the above behavior confusing, think of path segments as directories (with trailing slashes) and files, it will start to make sense.\n *\n * Path-relative redirects are also possible. If you were on http://example.com/admin/post/new, the following would redirect to http//example.com/admin/post:\n *\n * ```typescript\n *  @Redirect('..');\n * ``\n *\n * A back redirection redirects the request back to the referer, defaulting to / when the referer is missing.\n *\n * ```typescript\n *  @Redirect('back');\n * ```\n *\n * @param url\n * @decorator\n * @operation\n * @response\n * @headers\n */\nexport function Redirect(url: string): Function;\nexport function Redirect(status: number, url: string): Function;\nexport function Redirect(status: string | number, url?: string): Function {\n  url = (!url ? status : url) as string;\n  status = typeof status === \"number\" ? status : 302;\n\n  return useDecorators(\n    Status(status),\n    EndpointFn((endpoint) => {\n      endpoint.redirect = {status: +status, url: url!};\n    })\n  );\n}\n"]}