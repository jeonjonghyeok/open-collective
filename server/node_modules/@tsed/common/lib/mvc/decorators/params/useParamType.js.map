{"version":3,"file":"useParamType.js","sourceRoot":"","sources":["../../../../src/mvc/decorators/params/useParamType.ts"],"names":[],"mappings":";;;AAAA,yCAA6C;AAE7C,uCAAkC;AAElC;;;;;;;;GAQG;AACH,SAAgB,YAAY,CAAC,SAA8B;IACzD,OAAO,iBAAO,CAAC,CAAC,KAAK,EAAE,EAAE;QACvB,IAAI,wBAAe,CAAC,SAAS,CAAC,EAAE;YAC9B,KAAK,CAAC,SAAU,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;SAChC;QAED,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;IAC9B,CAAC,CAAC,CAAC;AACL,CAAC;AARD,oCAQC","sourcesContent":["import {isParameterType} from \"@tsed/schema\";\nimport {ParamTypes} from \"../../models/ParamTypes\";\nimport {ParamFn} from \"./paramFn\";\n\n/**\n * Get the object from request (like body, params, query, etc...).\n *\n * @param paramType\n * @decorator\n * @operation\n * @input\n * @pipe\n */\nexport function UseParamType(paramType: string | ParamTypes) {\n  return ParamFn((param) => {\n    if (isParameterType(paramType)) {\n      param.parameter!.in(paramType);\n    }\n\n    param.paramType = paramType;\n  });\n}\n"]}