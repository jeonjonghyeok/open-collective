{"version":3,"file":"request.js","sourceRoot":"","sources":["../../../../src/mvc/decorators/params/request.ts"],"names":[],"mappings":";;;AAAA,qCAA2D;AAC3D,+BAAqC;AAErC,wDAAmD;AACnD,mEAA8D;AAC9D,yCAAoC;AAEpC,SAAS,YAAY,CAAC,MAAc,EAAE,WAA4B,EAAE,cAAsB;IACxF,MAAM,IAAI,GAAG,eAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,cAAc,CAAC,CAAC;IAE5E,IAAI,cAAO,CAAC,IAAI,CAAC,EAAE;QACjB,IAAI,aAAM,CAAC,IAAI,CAAC,KAAK,iBAAiB,EAAE;YACtC,OAAO,uBAAU,CAAC,gBAAgB,CAAC;SACpC;QAED,IAAI,IAAI,KAAK,sBAAe,EAAE;YAC5B,OAAO,uBAAU,CAAC,YAAY,CAAC;SAChC;KACF;IAED,OAAO,uBAAU,CAAC,OAAO,CAAC;AAC5B,CAAC;AAcD,SAAgB,OAAO,CAAC,GAAG,IAAW;IACpC,aAAa;IACb,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;AACtB,CAAC;AAHD,0BAGC;AAeD,SAAgB,GAAG,CAAC,GAAG,IAAW;IAChC,MAAM,EAAC,UAAU,EAAE,OAAO,EAAE,YAAY,GAAG,KAAK,EAAE,aAAa,GAAG,KAAK,EAAC,GAAG,mCAAgB,CAAC,IAAI,CAAC,CAAC;IAElG,OAAO,CAAC,MAAM,EAAE,WAAW,EAAE,cAAc,EAAE,EAAE;QAC7C,MAAM,SAAS,GAAG,YAAY,CAAC,MAAM,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC;QAEpE,mBAAQ,CAAC,SAAS,EAAE;YAClB,UAAU;YACV,OAAO;YACP,YAAY;YACZ,aAAa;SACd,CAAC,CAAC,MAAM,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC;IAC1C,CAAC,CAAC;AACJ,CAAC;AAbD,kBAaC","sourcesContent":["import {isClass, Metadata, nameOf, Type} from \"@tsed/core\";\nimport {IncomingMessage} from \"http\";\nimport {IParamOptions} from \"../../interfaces/IParamOptions\";\nimport {ParamTypes} from \"../../models/ParamTypes\";\nimport {mapParamsOptions} from \"../../utils/mapParamsOptions\";\nimport {UseParam} from \"./useParam\";\n\nfunction getParamType(target: Object, propertyKey: string | symbol, parameterIndex: number) {\n  const type = Metadata.getOwnParamTypes(target, propertyKey)[parameterIndex];\n\n  if (isClass(type)) {\n    if (nameOf(type) === \"PlatformRequest\") {\n      return ParamTypes.PLATFORM_REQUEST;\n    }\n\n    if (type === IncomingMessage) {\n      return ParamTypes.NODE_REQUEST;\n    }\n  }\n\n  return ParamTypes.REQUEST;\n}\n\n/**\n * Request service.\n *\n * @decorator\n * @operation\n * @input\n */\nexport function Request(expression: string, useType: Type<any>): ParameterDecorator;\nexport function Request(expression: string): ParameterDecorator;\nexport function Request(useType: Type<any>): ParameterDecorator;\nexport function Request(options: IParamOptions<any>): ParameterDecorator;\nexport function Request(): ParameterDecorator;\nexport function Request(...args: any[]): ParameterDecorator {\n  // @ts-ignore\n  return Req(...args);\n}\n\n/**\n * Request service.\n *\n * @alias Request\n * @decorator\n * @operation\n * @input\n */\nexport function Req(expression: string, useType: Type<any>): ParameterDecorator;\nexport function Req(expression: string): ParameterDecorator;\nexport function Req(useType: Type<any>): ParameterDecorator;\nexport function Req(options: IParamOptions<any>): ParameterDecorator;\nexport function Req(): ParameterDecorator;\nexport function Req(...args: any[]): ParameterDecorator {\n  const {expression, useType, useConverter = false, useValidation = false} = mapParamsOptions(args);\n\n  return (target, propertyKey, parameterIndex) => {\n    const paramType = getParamType(target, propertyKey, parameterIndex);\n\n    UseParam(paramType, {\n      expression,\n      useType,\n      useConverter,\n      useValidation\n    })(target, propertyKey, parameterIndex);\n  };\n}\n\n/**\n * Request service.\n *\n * @decorator\n * @operation\n * @input\n */\nexport interface Request extends TsED.Request {}\n\n/**\n * Request service.\n *\n * @alias Request\n * @decorator\n * @operation\n * @input\n */\nexport interface Req extends Request {}\n"]}