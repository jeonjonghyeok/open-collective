{"version":3,"file":"default.js","sourceRoot":"","sources":["../../../src/jsonschema/decorators/default.ts"],"names":[],"mappings":";;;AAAA,yCAA0C;AAE1C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyCG;AACH,SAAgB,OAAO,CAAC,YAA4C;IAClE,OAAO,gBAAC,CAAC,YAAY,CAAC,CAAC;AACzB,CAAC;AAFD,0BAEC","sourcesContent":["import {Default as D} from \"@tsed/schema\";\n\n/**\n * There are no restrictions placed on the value of this keyword.\n *\n * ::: warning\n * This decorator will be removed in v7.\n * For v6 user, use @@Default@@ from @tsed/schema instead of @tsed/common.\n * :::\n *\n * This keyword can be used to supply a default JSON value associated with a particular schema.\n * It is RECOMMENDED that a default value be valid against the associated schema.\n *\n * ## Example\n *\n * ```typescript\n * class Model {\n *    @Default(\"10\")\n *    property: string = \"10\";\n * }\n * ```\n *\n * Will produce:\n *\n * ```json\n * {\n *   \"type\": \"object\",\n *   \"properties\": {\n *     \"property\": {\n *       \"type\": \"string\",\n *       \"default\": \"10\"\n *     }\n *   }\n * }\n * ```\n *\n * @param {string | number | boolean | {}} defaultValue\n * @decorator\n * @validation\n * @swagger\n * @schema\n * @ignore\n * @deprecated Since v6. Use @Default decorator from @tsed/schema instead of.\n */\nexport function Default(defaultValue: string | number | boolean | {}) {\n  return D(defaultValue);\n}\n"]}