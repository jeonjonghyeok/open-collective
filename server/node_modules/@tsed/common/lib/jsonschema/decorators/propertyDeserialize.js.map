{"version":3,"file":"propertyDeserialize.js","sourceRoot":"","sources":["../../../src/jsonschema/decorators/propertyDeserialize.ts"],"names":[],"mappings":";;;AAAA,mDAAqD;AAErD;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AACH,SAAgB,aAAa,CAAC,EAAuB;IACnD,OAAO,2BAAC,CAAC,EAAE,CAAC,CAAC;AACf,CAAC;AAFD,sCAEC","sourcesContent":["import {OnDeserialize as D} from \"@tsed/json-mapper\";\n\n/**\n * Call the function before property deserialization.\n *\n * ::: warning\n * This decorator will be removed in v6 in favor of @@OnDeserialize@@ from @tsed/json-mapper.\n * For v5 user, use @@OnDeserialize@@ decorator from @tsed/common then in v6 switch to @tsed/schema.\n * :::\n *\n * ## Example\n *\n * ```typescript\n * class Model {\n *    @OnDeserialize(v => v + 1)\n *    property: string;\n * }\n * ```\n *\n * @param {Function} fn\n * @returns {Function}\n * @decorator\n * @jsonMapper\n * @schema\n * @property\n * @ignore\n * @deprecated Since v6. Use @OnDeserialize from @tsed/json-mapper\n */\nexport function OnDeserialize(fn: (value: any) => any) {\n  return D(fn);\n}\n"]}