{"version":3,"file":"minProperties.js","sourceRoot":"","sources":["../../../src/jsonschema/decorators/minProperties.ts"],"names":[],"mappings":";;;AAAA,yCAAgD;AAEhD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+CG;AACH,SAAgB,aAAa,CAAC,aAAqB;IACjD,OAAO,sBAAC,CAAC,aAAa,CAAC,CAAC;AAC1B,CAAC;AAFD,sCAEC","sourcesContent":["import {MinProperties as M} from \"@tsed/schema\";\n\n/**\n * An object instance is valid against `minProperties` if its number of properties is less than, or equal to, the value of this keyword.\n *\n * ::: warning\n * The value of this keyword MUST be a non-negative integer.\n * :::\n *\n * ::: tip\n * Omitting this keyword has the same behavior as a value of 0.\n * :::\n *\n * ::: warning\n * This decorator will be removed in v7.\n * For v6 user, use @@MinProperties@@ from @tsed/schema instead of @tsed/common.\n * :::\n *\n * ## Example\n * ### On prop\n * ```typescript\n * class Model {\n *    @Any()\n *    @MinProperties(10)\n *    property: any;\n * }\n * ```\n *\n * Will produce:\n *\n * ```json\n * {\n *   \"type\": \"object\",\n *   \"properties\": {\n *     \"property\": {\n *       \"type\": \"any\",\n *       \"minProperties\": 10\n *     }\n *   }\n * }\n * ```\n *\n * @param {number} minProperties The minimum properties allowed on the object.\n * @validation\n * @swagger\n * @schema\n * @collections\n * @ignore\n * @deprecated Since v6. Use @MinProperties decorator from @tsed/schema instead of.\n */\nexport function MinProperties(minProperties: number) {\n  return M(minProperties);\n}\n"]}