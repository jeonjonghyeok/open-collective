{"version":3,"file":"ignoreProperty.js","sourceRoot":"","sources":["../../../src/jsonschema/decorators/ignoreProperty.ts"],"names":[],"mappings":";;;AAAA,yCAAyC;AAEzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6DG;AACH,SAAgB,MAAM;IACpB,OAAO,eAAC,EAAE,CAAC;AACb,CAAC;AAFD,wBAEC","sourcesContent":["import {Ignore as I} from \"@tsed/schema\";\n\n/**\n * Ignore the property when JsonMapper serialize the class to a Plain Object JavaScript.\n *\n * ::: tip\n * This decorator is used by the Converters to serialize correctly your model.\n * :::\n *\n * ::: warning\n * Swagger will not generate documentation for the ignored property.\n * :::\n *\n * ```typescript\n * class User {\n *   @Ignore()\n *   _id: string;\n *\n *   @Property()\n *   firstName: string;\n *\n *   @Property()\n *   lastName: string;\n *\n *   @Ignore()\n *   password: string;\n * }\n * ```\n *\n * The controller:\n * ```typescript\n * import {Post, Controller, BodyParams} from \"@tsed/common\";\n * import {Person} from \"../models/Person\";\n *\n * @Controller(\"/\")\n * export class UsersCtrl {\n *\n *   @Get(\"/\")\n *   get(): User {\n *       const user = new User();\n *       user._id = \"12345\";\n *       user.firstName = \"John\";\n *       user.lastName = \"Doe\";\n *       user.password = \"secretpassword\";\n *         return\n *   }\n * }\n * ```\n *\n * The expected json object:\n *\n * ```json\n * {\n *  \"firstName\": \"John\",\n *  \"lastName\": \"Doe\"\n * }\n * ```\n *\n * @decorator\n * @jsonMapper\n * @schema\n * @ignore\n * @deprecated Since v6. Use @Ignore decorator from @tsed/schema instead of.\n */\nexport function Ignore() {\n  return I();\n}\n"]}