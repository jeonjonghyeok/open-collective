{"version":3,"file":"multipleOf.js","sourceRoot":"","sources":["../../../src/jsonschema/decorators/multipleOf.ts"],"names":[],"mappings":";;;AAAA,yCAA6C;AAE7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoEG;AACH,SAAgB,UAAU,CAAC,UAAkB;IAC3C,OAAO,mBAAC,CAAC,UAAU,CAAC,CAAC;AACvB,CAAC;AAFD,gCAEC","sourcesContent":["import {MultipleOf as M} from \"@tsed/schema\";\n\n/**\n * A numeric instance is valid only if division by this keyword's value results in an integer.\n *\n * ::: warning\n * The value of `multipleOf` MUST be a number, strictly greater than 0.\n * :::\n *\n * ::: warning\n * This decorator will be removed in v7.\n * For v6 user, use @@MultipleOf@@ from @tsed/schema instead of @tsed/common.\n * :::\n *\n * ## Example\n * ### With primitive type\n *\n * ```typescript\n * class Model {\n *    @MultipleOf(2)\n *    property: Number;\n * }\n * ```\n *\n * ```json\n * {\n *   \"type\": \"object\",\n *   \"properties\": {\n *     \"property\": {\n *       \"type\": \"number\",\n *       \"multipleOf\": 2\n *     }\n *   }\n * }\n * ```\n *\n * ### With array type\n *\n * ```typescript\n * class Model {\n *    @CollectionOf(number)\n *    @MultipleOf(2)\n *    property: number[];\n * }\n * ```\n *\n * Will produce:\n *\n * ```json\n * {\n *   \"type\": \"object\",\n *   \"properties\": {\n *     \"property\": {\n *       \"type\": \"array\",\n *       \"items\": {\n *          \"type\": \"number\",\n *          \"multipleOf\": 2\n *       }\n *     }\n *   }\n * }\n * ```\n *\n * @param {number} multipleOf The multiple value allowed\n * @decorator\n * @validation\n * @swagger\n * @schema\n * @ignore\n * @deprecated Since v6. Use @MultipleOf decorator from @tsed/schema instead of.\n */\nexport function MultipleOf(multipleOf: number) {\n  return M(multipleOf);\n}\n"]}