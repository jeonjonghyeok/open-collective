{"version":3,"file":"uniqueItems.js","sourceRoot":"","sources":["../../../src/jsonschema/decorators/uniqueItems.ts"],"names":[],"mappings":";;;AAAA,yCAA8C;AAE9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmDG;AACH,SAAgB,WAAW,CAAC,cAAuB,IAAI;IACrD,OAAO,oBAAC,CAAC,WAAW,CAAC,CAAC;AACxB,CAAC;AAFD,kCAEC","sourcesContent":["import {UniqueItems as U} from \"@tsed/schema\";\n\n/**\n * If this keyword has boolean value false, the instance validates successfully. If it has boolean value true, the instance validates successfully if all of its elements are unique.\n *\n * ::: warning\n * This decorator will be removed in v7.\n * For v6 user, use @@UniqueItems@@ from @tsed/schema instead of @tsed/common.\n * :::\n *\n * ## Example\n *\n * ```typescript\n * class Model {\n *    @UniqueItems()  // default true\n *    property: number[];\n * }\n * ```\n *\n *  * ```typescript\n * class Model {\n *    @CollectionOf(String)\n *    @UniqueItems()\n *    property: string[];\n * }\n * ```\n *\n * Will produce:\n *\n * ```json\n * {\n *   \"type\": \"object\",\n *   \"properties\": {\n *     \"property\": {\n *       \"type\": \"array\",\n *       \"uniqueItems\": true,\n *       \"items\": {\n *         \"type\": \"string\"\n *       }\n *     }\n *   }\n * }\n * ```\n *\n * @param {boolean} uniqueItems\n * @decorator\n * @validation\n * @swagger\n * @schema\n * @input\n * @ignore\n * @collections\n * @deprecated Since v6. Use @UniqueItems decorator from @tsed/schema instead of.\n */\nexport function UniqueItems(uniqueItems: boolean = true) {\n  return U(uniqueItems);\n}\n"]}