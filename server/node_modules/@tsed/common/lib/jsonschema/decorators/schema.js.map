{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../src/jsonschema/decorators/schema.ts"],"names":[],"mappings":";;;AAAA,yCAAyC;AAGzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4CG;AACH,SAAgB,MAAM,CAAC,aAAmC;IACxD,OAAO,eAAC,CAAC,aAAa,CAAC,CAAC;AAC1B,CAAC;AAFD,wBAEC","sourcesContent":["import {Schema as S} from \"@tsed/schema\";\nimport {JSONSchema6} from \"json-schema\";\n\n/**\n * Write data formatted to JsonSchema.\n *\n * ::: warning\n * This decorator will be removed in v7.\n * For v6 user, use @@Schema@@ decorator from @tsed/schema.\n * :::\n *\n * ## Example\n *\n * ```typescript\n * @Schema({title: \"test\"})\n * class Model {\n *    @Schema({formatMinimum: \"1987-10-24\"})\n *    @Format(\"date\")\n *    birthDate: Date\n * }\n * ```\n *\n * Will produce:\n *\n * ```json\n * {\n *   \"type\": \"object\",\n *   \"title\": \"test\",\n *   \"properties\": {\n *     \"birthdate\": {\n *        \"type\": \"string\",\n *        \"format\": \"date\",\n *        \"formatMinimum\": \"1987-10-24\"\n *     }\n *   }\n * }\n * ```\n *\n * @param partialSchema\n * @decorator\n * @validation\n * @swagger\n * @schema\n * @classDecorator\n * @input\n * @ignore\n * @deprecated Since v6. Use @Schema decorator from @tsed/schema instead of.\n */\nexport function Schema(partialSchema: Partial<JSONSchema6>) {\n  return S(partialSchema);\n}\n"]}