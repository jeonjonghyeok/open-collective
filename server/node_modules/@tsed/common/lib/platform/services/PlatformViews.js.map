{"version":3,"file":"PlatformViews.js","sourceRoot":"","sources":["../../../src/platform/services/PlatformViews.ts"],"names":[],"mappings":"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","sourcesContent":["import {Env} from \"@tsed/core\";\nimport {Constant, Injectable} from \"@tsed/di\";\nimport * as cons from \"consolidate\";\nimport * as Fs from \"fs\";\nimport {extname, join, resolve} from \"path\";\nimport {\n  PlatformViewsEngineOptions,\n  PlatformViewsExtensionsTypes,\n  PlatformViewsSupportedEngines\n} from \"../../config/interfaces/PlatformViewsSettings\";\n\n/**\n * @platform\n */\n@Injectable()\nexport class PlatformViews {\n  @Constant(\"env\")\n  env: Env;\n\n  @Constant(\"views.root\", `${process.cwd()}/views`)\n  readonly root: string;\n\n  @Constant(\"views.cache\")\n  readonly cache: boolean;\n\n  @Constant(\"views.viewEngine\", \"ejs\")\n  readonly viewEngine: string;\n  readonly consolidate: any = cons;\n\n  @Constant(\"views.extensions\", {})\n  protected extensions: PlatformViewsExtensionsTypes;\n  protected extensionsMap: Map<string, PlatformViewsSupportedEngines>;\n\n  @Constant(\"views.options\", {})\n  protected engineOptions: PlatformViewsEngineOptions;\n\n  $onInit() {\n    this.extensionsMap = new Map(\n      Object.entries({\n        hbs: \"handlebars\",\n        ejs: \"ejs\",\n        ...this.extensions\n      })\n    );\n    this.loadEngineRequires();\n  }\n\n  loadEngineRequires() {\n    return Object.keys(this.engineOptions).map((engineType: PlatformViewsSupportedEngines) => {\n      const options = this.getEngineOptions(engineType);\n      if (options && options.requires) this.consolidate.requires[engineType] = options.requires;\n    });\n  }\n\n  getExtensions(): Map<string, PlatformViewsSupportedEngines> {\n    return this.extensionsMap;\n  }\n\n  getEngines() {\n    return Array.from(this.extensionsMap.entries())\n      .map(([extension, engineType]) => {\n        const engine = this.getEngine(engineType);\n\n        return engine && {extension, engine};\n      })\n      .filter(Boolean);\n  }\n\n  getEngine(engineType: PlatformViewsSupportedEngines) {\n    return this.consolidate[engineType];\n  }\n\n  getEngineOptions(engineType: PlatformViewsSupportedEngines) {\n    return (engineType && this.engineOptions[engineType]) || {};\n  }\n\n  render(viewPath: string, options: any = {}) {\n    const extension = (extname(viewPath) || this.viewEngine).replace(/\\./, \"\");\n    const engineType = this.getExtensions().get(extension)!;\n    const engineOptions = this.getEngineOptions(engineType);\n    const render = this.getEngine(engineType);\n\n    if (!engineType || !render) {\n      throw new Error(`Engine not found for the \".${extension}\" file extension`);\n    }\n\n    return render(this.resolve(viewPath), Object.assign({cache: this.cache || this.env === Env.PROD}, engineOptions, options));\n  }\n\n  protected resolve(viewPath: string) {\n    const extension = (extname(viewPath) || this.viewEngine).replace(/\\./, \"\");\n\n    viewPath = viewPath.replace(extname(viewPath), \"\") + \".\" + extension;\n\n    return (\n      [\n        viewPath,\n        resolve(join(this.root, viewPath)),\n        resolve(join(process.cwd(), \"views\", viewPath)),\n        resolve(join(process.cwd(), \"public\", viewPath))\n      ].find((file) => Fs.existsSync(file)) || viewPath\n    );\n  }\n}\n"]}