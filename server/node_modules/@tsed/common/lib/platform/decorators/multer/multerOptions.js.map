{"version":3,"file":"multerOptions.js","sourceRoot":"","sources":["../../../../src/platform/decorators/multer/multerOptions.ts"],"names":[],"mappings":";;;AAAA,qCAAsC;AAEtC,yFAAoF;AAEpF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsCG;AACH,SAAgB,aAAa,CAAC,OAA+B;IAC3D,OAAO,CAAC,MAAW,EAAE,WAAmB,EAAE,UAA8B,EAAE,EAAE;QAC1E,iBAAU,CAAC,mDAAwB,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC,MAAM,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;QAEjF,OAAO,UAAU,CAAC;IACpB,CAAC,CAAC;AACJ,CAAC;AAND,sCAMC","sourcesContent":["import {StoreMerge} from \"@tsed/core\";\nimport {PlatformMulterSettings} from \"../../../config/interfaces/PlatformMulterSettings\";\nimport {PlatformMulterMiddleware} from \"../../middlewares/PlatformMulterMiddleware\";\n\n/**\n * Define multer option for all MultipartFile\n *\n * ```typescript\n * import {Controller, Post, PlatformMulterFile, MultipartFile, MulterOptions} from \"@tsed/common\";\n *\n * @Controller('/')\n * class MyCtrl {\n *   @Post('/file')\n *   private uploadFile(@MultipartFile(\"file1\") file: PlatformMulterFile) {\n *\n *   }\n *\n *   @Post('/file')\n *   @MulterOptions({dest: \"/other-dir\"})\n *   private uploadFile(@MultipartFile(\"file1\") file: PlatformMulterFile) {\n *\n *   }\n *\n *   @Post('/file2')\n *   @MulterOptions({dest: \"/other-dir\"})\n *   private uploadFile(@MultipartFile(\"file1\") file: PlatformMulterFile, @MultipartFile(\"file2\") file2: PlatformMulterFile) {\n *\n *   }\n *\n *   @Post('/files')\n *   private uploadFile(@MultipartFile(\"file1\") files: PlatformMulterFile[]) {\n *\n *   }\n * }\n * ```\n *\n * See the tutorial on the [multer configuration](/tutorials/multer.md).\n *\n * @param {multer.Options} options\n * @returns {(target: any, propertyKey: string, descriptor: PropertyDescriptor) => PropertyDescriptor}\n * @decorator\n * @multer\n */\nexport function MulterOptions(options: PlatformMulterSettings): MethodDecorator {\n  return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n    StoreMerge(PlatformMulterMiddleware, {options})(target, propertyKey, descriptor);\n\n    return descriptor;\n  };\n}\n"]}