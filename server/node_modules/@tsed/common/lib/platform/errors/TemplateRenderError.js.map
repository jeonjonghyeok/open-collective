{"version":3,"file":"TemplateRenderError.js","sourceRoot":"","sources":["../../../src/platform/errors/TemplateRenderError.ts"],"names":[],"mappings":";;;AAAA,qCAAwC;AACxC,iDAAqD;AAErD;;GAEG;AACH,MAAa,mBAAoB,SAAQ,gCAAmB;IAG1D,YAAY,MAA0B,EAAE,MAAuB,EAAE,GAAU;QACzE,KAAK,CAAC,mBAAmB,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;QAH/D,SAAI,GAAG,uBAAuB,CAAC;IAI/B,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,YAAY,CAAC,MAA0B,EAAE,MAAuB,EAAE,GAAU;QACjF,OAAO,6BAA6B,aAAM,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;IACnF,CAAC;CACF;AAdD,kDAcC","sourcesContent":["import {nameOf, Type} from \"@tsed/core\";\nimport {InternalServerError} from \"@tsed/exceptions\";\n\n/**\n * @private\n */\nexport class TemplateRenderError extends InternalServerError {\n  name = \"TEMPLATE_RENDER_ERROR\";\n\n  constructor(target: Type<any> | string, method: string | symbol, err: Error) {\n    super(TemplateRenderError.buildMessage(target, method, err));\n  }\n\n  /**\n   *\n   * @returns {string}\n   */\n  static buildMessage(target: Type<any> | string, method: string | symbol, err: Error) {\n    return `Template rendering error: ${nameOf(target)}.${String(method)}()\\n` + err;\n  }\n}\n"]}