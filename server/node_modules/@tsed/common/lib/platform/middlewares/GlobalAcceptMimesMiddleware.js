"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GlobalAcceptMimesMiddleware = void 0;
const tslib_1 = require("tslib");
const di_1 = require("@tsed/di");
const exceptions_1 = require("@tsed/exceptions");
const mvc_1 = require("../../mvc");
const context_1 = require("../decorators/context");
/**
 * @middleware
 */
let GlobalAcceptMimesMiddleware = class GlobalAcceptMimesMiddleware {
    constructor(configuration) {
        this.configuration = configuration;
    }
    use(ctx) {
        const { request } = ctx;
        if (!request.accepts(this.configuration.acceptMimes)) {
            throw new exceptions_1.NotAcceptable(this.configuration.acceptMimes.join(", "));
        }
    }
};
tslib_1.__decorate([
    tslib_1.__param(0, context_1.Context()),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object]),
    tslib_1.__metadata("design:returntype", void 0)
], GlobalAcceptMimesMiddleware.prototype, "use", null);
GlobalAcceptMimesMiddleware = tslib_1.__decorate([
    mvc_1.Middleware(),
    tslib_1.__param(0, di_1.Configuration()),
    tslib_1.__metadata("design:paramtypes", [Object])
], GlobalAcceptMimesMiddleware);
exports.GlobalAcceptMimesMiddleware = GlobalAcceptMimesMiddleware;
//# sourceMappingURL=GlobalAcceptMimesMiddleware.js.map