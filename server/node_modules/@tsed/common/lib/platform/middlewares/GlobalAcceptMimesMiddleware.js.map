{"version":3,"file":"GlobalAcceptMimesMiddleware.js","sourceRoot":"","sources":["../../../src/platform/middlewares/GlobalAcceptMimesMiddleware.ts"],"names":[],"mappings":";;;;AAAA,iCAAuC;AACvC,iDAA+C;AAC/C,mCAAkD;AAClD,mDAA8C;AAE9C;;GAEG;AAEH,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;IACtC,YAAqC,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAG,CAAC;IAErE,GAAG,CAAY,GAAY;QACzB,MAAM,EAAC,OAAO,EAAC,GAAG,GAAG,CAAC;QAEtB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE;YACpD,MAAM,IAAI,0BAAa,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACpE;IACH,CAAC;CACF,CAAA;AAPC;IAAK,mBAAA,iBAAO,EAAE,CAAA;;;;sDAMb;AATU,2BAA2B;IADvC,gBAAU,EAAE;IAEE,mBAAA,kBAAa,EAAE,CAAA;;GADjB,2BAA2B,CAUvC;AAVY,kEAA2B","sourcesContent":["import {Configuration} from \"@tsed/di\";\nimport {NotAcceptable} from \"@tsed/exceptions\";\nimport {IMiddleware, Middleware} from \"../../mvc\";\nimport {Context} from \"../decorators/context\";\n\n/**\n * @middleware\n */\n@Middleware()\nexport class GlobalAcceptMimesMiddleware implements IMiddleware {\n  constructor(@Configuration() private configuration: Configuration) {}\n\n  use(@Context() ctx: Context) {\n    const {request} = ctx;\n\n    if (!request.accepts(this.configuration.acceptMimes)) {\n      throw new NotAcceptable(this.configuration.acceptMimes.join(\", \"));\n    }\n  }\n}\n"]}