{"version":3,"file":"RequestLogger.js","sourceRoot":"","sources":["../../../src/platform/domain/RequestLogger.ts"],"names":[],"mappings":"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","sourcesContent":["import {levels, LogLevel} from \"@tsed/logger\";\n\nexport interface RequestLoggerOptions {\n  id: string;\n  dateStart: Date;\n  url: string;\n  ignoreUrlPatterns?: any[];\n  level?: \"debug\" | \"info\" | \"warn\" | \"error\" | \"off\" | \"all\";\n  maxStackSize?: number;\n  minimalRequestPicker?: (o: any) => any;\n  completeRequestPicker?: (o: any) => any;\n}\n\nexport class RequestLogger {\n  readonly id: string;\n  readonly url: string;\n  readonly dateStart: Date;\n  public maxStackSize: number;\n  public minimalRequestPicker: Function;\n  public completeRequestPicker: Function;\n  private readonly ignoreUrlPatterns: any[];\n  private stack: any = [];\n  private level: LogLevel;\n\n  constructor(\n    private logger: any,\n    {\n      id,\n      dateStart,\n      url,\n      ignoreUrlPatterns = [],\n      minimalRequestPicker,\n      completeRequestPicker,\n      level = \"all\",\n      maxStackSize = 30\n    }: RequestLoggerOptions\n  ) {\n    this.id = id;\n    this.url = url;\n    this.dateStart = dateStart;\n    this.ignoreUrlPatterns = ignoreUrlPatterns.map((pattern: string | RegExp) =>\n      typeof pattern === \"string\" ? new RegExp(pattern, \"gi\") : pattern\n    );\n\n    this.minimalRequestPicker = minimalRequestPicker || ((l: any) => l);\n    this.completeRequestPicker = completeRequestPicker || ((l: any) => l);\n    // @ts-ignore\n    this.level = levels()[level.toUpperCase()] || levels().ALL;\n    this.maxStackSize = maxStackSize;\n  }\n\n  info(obj: any) {\n    this.run(levels().INFO, () => {\n      const data = this.minimalRequestPicker(this.getData(obj));\n      this.stack.push({level: \"info\", data});\n    });\n  }\n\n  debug(obj: any, withRequest: boolean = true) {\n    this.run(levels().DEBUG, () => {\n      obj = this.getData(obj);\n      const data = withRequest ? this.completeRequestPicker(obj) : obj;\n      this.stack.push({level: \"debug\", data});\n    });\n  }\n\n  warn(obj: any) {\n    this.run(levels().WARN, () => {\n      const data = this.completeRequestPicker(this.getData(obj));\n      this.stack.push({level: \"warn\", data});\n    });\n  }\n\n  error(obj: any) {\n    this.run(levels().ERROR, () => {\n      const data = this.completeRequestPicker(this.getData(obj));\n      this.stack.push({level: \"error\", data});\n    });\n  }\n\n  trace(obj: any) {\n    this.run(levels().TRACE, () => {\n      const data = this.completeRequestPicker(this.getData(obj));\n      this.stack.push({level: \"trace\", data});\n    });\n  }\n\n  public flush() {\n    if (this.stack.length) {\n      this.stack.forEach(({level, data}: any) => {\n        this.logger[level](data);\n      });\n\n      this.stack = [];\n    }\n  }\n\n  public isLevelEnabled(otherLevel: string | LogLevel) {\n    return this.level.isLessThanOrEqualTo(otherLevel);\n  }\n\n  destroy() {\n    this.flush();\n    delete this.logger;\n    delete this.stack;\n    // @ts-ignore\n    delete this.minimalRequestPicker;\n    // @ts-ignore\n    delete this.completeRequestPicker;\n  }\n\n  /**\n   * Return the duration between the time when LogIncomingRequest has handle the request and now.\n   * @returns {number}\n   */\n  protected getDuration(): number {\n    return new Date().getTime() - this.dateStart.getTime();\n  }\n\n  protected getData(obj: any) {\n    if (typeof obj === \"string\") {\n      obj = {message: obj};\n    }\n\n    return {reqId: this.id, time: new Date(), duration: this.getDuration(), ...obj};\n  }\n\n  protected run(level: LogLevel, cb: Function) {\n    if (!this.isLevelEnabled(level)) {\n      return;\n    }\n\n    const match = this.ignoreUrlPatterns.find((reg) => !!this.url.match(reg));\n\n    !match && cb();\n\n    if (this.maxStackSize < this.stack.length) {\n      this.flush();\n    }\n  }\n}\n"]}