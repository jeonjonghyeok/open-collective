{"version":3,"file":"StringErrorFilter.js","sourceRoot":"","sources":["../../../src/platform-exceptions/components/StringErrorFilter.ts"],"names":[],"mappings":";;;;AAEA,+CAA0C;AAE1C,MAAM,MAAM,GAAG,CAAC,OAAO,GAAG,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;AAGnE,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAC5B,KAAK,CAAC,KAAa,EAAE,GAAY;QAC/B,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/C,CAAC;CACF,CAAA;AAJY,iBAAiB;IAD7B,aAAK,CAAC,MAAM,CAAC;GACD,iBAAiB,CAI7B;AAJY,8CAAiB","sourcesContent":["import type {Context} from \"../../platform/decorators/context\";\nimport type {ExceptionFilterMethods} from \"../interfaces/ExceptionFilterMethods\";\nimport {Catch} from \"../decorators/catch\";\n\nconst toHTML = (message = \"\") => message.replace(/\\n/gi, \"<br />\");\n\n@Catch(String)\nexport class StringErrorFilter implements ExceptionFilterMethods {\n  catch(error: string, ctx: Context): void {\n    ctx.response.status(404).body(toHTML(error));\n  }\n}\n"]}